// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots App With Content 1`] = `
<div
  className="app small_screen"
>
  <nav
    className="nav"
  >
    <span
      className="nav_title"
    >
      CSS Loaders
    </span>
    <div
      className="nav_subtitle"
    >
      By 
      <a
        className="link"
        href="https://danielhearn.co.uk"
      >
        Daniel Hearn
      </a>
    </div>
  </nav>
  <div
    className="row"
    style={
      Object {
        "height": "90%",
      }
    }
  >
    <div
      className="mobile_nav_container"
    >
      <div
        className="mobile_nav_content"
      >
        <div
          className="row"
          style={
            Object {
              "height": "100%",
            }
          }
        >
          <div
            className="content_container"
          >
            <div
              className="scroll_box  scroll-y"
            >
              <div
                className="scroll_box_content"
              >
                <div
                  className="content"
                >
                  <div
                    style={
                      Object {
                        "marginBottom": "4em",
                      }
                    }
                  >
                    <div
                      className="loader_selection"
                    >
                      <div
                        className="filtered_grid"
                      >
                        <div
                          className="filtered_grid-search"
                        >
                          <div
                            className="grid"
                            style={
                              Object {
                                "gridTemplateColumns": "repeat(1, 1fr)",
                              }
                            }
                          >
                            <form
                              className="search_form"
                              onSubmit={[Function]}
                            >
                              <div
                                className="input_box"
                              >
                                <div
                                  className="input_icon"
                                >
                                  <svg
                                    fill="currentColor"
                                    height="1em"
                                    stroke="currentColor"
                                    strokeWidth="0"
                                    style={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    viewBox="0 0 512 512"
                                    width="1em"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                                    />
                                  </svg>
                                </div>
                                <input
                                  className="text_input with-icon"
                                  name="text"
                                  onChange={[Function]}
                                  placeholder="Search loaders"
                                  value=""
                                />
                              </div>
                            </form>
                          </div>
                        </div>
                        <div
                          className="filtered_grid-items"
                        >
                          <div
                            className="grid"
                            style={
                              Object {
                                "gridTemplateColumns": "repeat(1, 1fr)",
                              }
                            }
                          >
                            <div
                              className="grid_item active"
                              onClick={[Function]}
                            >
                              <a
                                href="/square"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                              >
                                <div
                                  className="loader_container"
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "background": "#d74b48",
                                      "display": "flex",
                                      "flex": "1",
                                      "height": "10em",
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <div
                                    className="loader"
                                  >
                                    <style>
                                      .squareLoader {
    max-width: 4em;
}
.squareLoader .squareLoader__square {
  height: 2em;
  width: 2em;
  background-color: white;
  float: right;
  animation: squareLoaderAnim 3s infinite;
}
.squareLoader .squareLoader__square:nth-child(1) {
  float: left;
}
.squareLoader .squareLoader__square:nth-child(1) {
  animation-delay: 0.3s;
}
.squareLoader .squareLoader__square:nth-child(2) {
  animation-delay: 0.6s;
}
.squareLoader .squareLoader__square:nth-child(3) {
  animation-delay: 0.9s;
}
.squareLoader .squareLoader__square:nth-child(4) {
  animation-delay: 1.2s;
}
  
@keyframes squareLoaderAnim {
  0% {
    opacity: 1;
  }
  40% {
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  90% {
    opacity: 1;
  }
  100% {
    opacity: 1;
  }
}
                                    </style>
                                    <div
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "<div class='squareLoader'>
  <div class='squareLoader__square'></div>
  <div class='squareLoader__square'></div>
  <div class='squareLoader__square'></div>
  <div class='squareLoader__square'></div>
</div>",
                                        }
                                      }
                                    />
                                  </div>
                                </div>
                                <div
                                  className="grid_item_title"
                                >
                                  <p
                                    className="text bold"
                                    style={
                                      Object {
                                        "margin": 0,
                                      }
                                    }
                                  >
                                    Square
                                  </p>
                                </div>
                              </a>
                            </div>
                            <div
                              className="grid_item "
                              onClick={[Function]}
                            >
                              <a
                                href="/heartbeat"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                              >
                                <div
                                  className="loader_container"
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "background": "#9a40a9",
                                      "display": "flex",
                                      "flex": "1",
                                      "height": "10em",
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <div
                                    className="loader"
                                  >
                                    <style>
                                      .heartbeatLoader {
  width: 4em;
  height: 4em;
  position: relative;
}
.heartbeatLoader .heartbeatLoader__pulse {
  width: 4em;
  height: 4em;
  border-radius: 50%;
  position: absolute;
  background-color: white;
  animation: heartbeatLoaderAnim 1.2s ease-in-out infinite;
  transform: scale(0);
  outline: 1px solid transparent;
}
.heartbeatLoader .heartbeatLoader__pulse:nth-child(2) {
  animation-delay: 0.22s;
}
@keyframes heartbeatLoaderAnim {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
    opacity: 0;
  }
}
                                    </style>
                                    <div
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "<div class=\\"heartbeatLoader\\">
  <div class=\\"heartbeatLoader__pulse\\"></div>
  <div class=\\"heartbeatLoader__pulse\\"></div>
</div>",
                                        }
                                      }
                                    />
                                  </div>
                                </div>
                                <div
                                  className="grid_item_title"
                                >
                                  <p
                                    className="text bold"
                                    style={
                                      Object {
                                        "margin": 0,
                                      }
                                    }
                                  >
                                    Heartbeat
                                  </p>
                                </div>
                              </a>
                            </div>
                            <div
                              className="grid_item "
                              onClick={[Function]}
                            >
                              <a
                                href="/slider"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                              >
                                <div
                                  className="loader_container"
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "background": "#714eaf",
                                      "display": "flex",
                                      "flex": "1",
                                      "height": "10em",
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <div
                                    className="loader"
                                  >
                                    <style>
                                      .sliderLoader {
  display: flex;
  justify-content: center;
  align-items: center;
}
.sliderLoader .sliderLoader__rect {
  height: 20px;
  width: 8px;
  background-color: white;
  display: inline-block;
  animation: sliderLoaderAnim 1.4s ease-in-out infinite;
  margin-right: 4px;
}
.sliderLoader .sliderLoader__rect:nth-child(1) {
  animation-delay: 0.15s;
}
.sliderLoader .sliderLoader__rect:nth-child(2) {
  animation-delay: 0.3s;
}
.sliderLoader .sliderLoader__rect:nth-child(3) {
  animation-delay: 0.45s;
}
.sliderLoader .sliderLoader__rect:nth-child(4) {
  animation-delay: 0.6s;
}
.sliderLoader .sliderLoader__rect:nth-child(5) {
  animation-delay: 0.75s;
}
@keyframes sliderLoaderAnim {
  0% {
    transform: scaleY(1);
  }
  25% {
    transform: scaleY(3);
  }
  50% {
    transform: scaleY(1);
  }
  100% {
    transform: scaleY(1);
  }
}
                                    </style>
                                    <div
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "<div class='sliderLoader'>
  <div class='sliderLoader__rect'></div>
  <div class='sliderLoader__rect'></div>
  <div class='sliderLoader__rect'></div>
  <div class='sliderLoader__rect'></div>
  <div class='sliderLoader__rect'></div>
</div>
        ",
                                        }
                                      }
                                    />
                                  </div>
                                </div>
                                <div
                                  className="grid_item_title"
                                >
                                  <p
                                    className="text bold"
                                    style={
                                      Object {
                                        "margin": 0,
                                      }
                                    }
                                  >
                                    Slider
                                  </p>
                                </div>
                              </a>
                            </div>
                            <div
                              className="grid_item "
                              onClick={[Function]}
                            >
                              <a
                                href="/hollow_box"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                              >
                                <div
                                  className="loader_container"
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "background": "#22958b",
                                      "display": "flex",
                                      "flex": "1",
                                      "height": "10em",
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <div
                                    className="loader"
                                  >
                                    <style>
                                      .hollowLoader {
  width: 3em;
  height: 3em;
  animation: hollowBoxLoaderAnim 1.25s infinite ease-in-out;
  outline: 1px solid transparent;
}
.hollowLoader .hollowLoader__largeBox {
  height: 3em;
  width: 3em;
  background-color: #ECECEC;
  outline: 1px solid transparent;
  position: fixed;
}
.hollowLoader .hollowLoader__smallBox {
  height: 3em;
  width: 3em;
  background-color: #22958b; //Change to colour of background
  position: fixed;
  z-index: 1;
  outline: 1px solid transparent;
  animation: hollowBoxLoaderSmallBoxAnim 1.25s alternate infinite ease-in-out;
}
@keyframes hollowBoxLoaderSmallBoxAnim {
  0% {
    -webkit-transform: scale(0.2);
    transform: scale(0.2);
  }
  100% {
    -webkit-transform: scale(0.75);
    transform: scale(0.75);
  }
}
@keyframes hollowBoxLoaderAnim {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(90deg);
    transform: rotate(90deg);
  }
}
                                    </style>
                                    <div
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "<div class=\\"hollowLoader\\">
  <div class=\\"hollowLoader__largeBox\\"></div>
  <div class=\\"hollowLoader__smallBox\\"></div>
</div>",
                                        }
                                      }
                                    />
                                  </div>
                                </div>
                                <div
                                  className="grid_item_title"
                                >
                                  <p
                                    className="text bold"
                                    style={
                                      Object {
                                        "margin": 0,
                                      }
                                    }
                                  >
                                    Hollow Box
                                  </p>
                                </div>
                              </a>
                            </div>
                            <div
                              className="grid_item "
                              onClick={[Function]}
                            >
                              <a
                                href="/pulse"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                              >
                                <div
                                  className="loader_container"
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "background": "#62af65",
                                      "display": "flex",
                                      "flex": "1",
                                      "height": "10em",
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <div
                                    className="loader"
                                  >
                                    <style>
                                      .pulseLoader {
  width: 4em;
  height: 4em;
  border-radius: 4em;
  background-color: white;
  outline: 1px solid transparent;
  animation: pulseLoaderAnim 1.2s ease-in-out infinite;
}
@keyframes pulseLoaderAnim {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
    opacity: 0;
  }
}
                                    </style>
                                    <div
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "<div class='pulseLoader'></div>
    ",
                                        }
                                      }
                                    />
                                  </div>
                                </div>
                                <div
                                  className="grid_item_title"
                                >
                                  <p
                                    className="text bold"
                                    style={
                                      Object {
                                        "margin": 0,
                                      }
                                    }
                                  >
                                    Pulse
                                  </p>
                                </div>
                              </a>
                            </div>
                            <div
                              className="grid_item "
                              onClick={[Function]}
                            >
                              <a
                                href="/bar"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                              >
                                <div
                                  className="loader_container"
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "background": "#e6653c",
                                      "display": "flex",
                                      "flex": "1",
                                      "height": "10em",
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <div
                                    className="loader"
                                  >
                                    <style>
                                      .barLoader {
  width: 10em;
}
.barLoader .barLoader__bar {
  width: 100%;
  opacity: 0;
  height: 1.5em;
  background: #fefefe;
  animation: barLoaderAnim 2.5s infinite cubic-bezier(0.61, 0.33, 0.39, 0.79);
  transform-origin: 0% 50%;
}
@keyframes barLoaderAnim {
  0% {
    transform: scaleX(0);
    opacity: 0;
  }
  5% {
    transform: scaleX(0);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  95% {
    transform: scaleX(1);
  }
  100% {
    transform: scaleX(1);
    opacity: 0;
  }
}
                                    </style>
                                    <div
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "<div class=\\"barLoader\\">
  <div class=\\"barLoader__bar\\"></div>
</div>",
                                        }
                                      }
                                    />
                                  </div>
                                </div>
                                <div
                                  className="grid_item_title"
                                >
                                  <p
                                    className="text bold"
                                    style={
                                      Object {
                                        "margin": 0,
                                      }
                                    }
                                  >
                                    Bar
                                  </p>
                                </div>
                              </a>
                            </div>
                            <div
                              className="grid_item "
                              onClick={[Function]}
                            >
                              <a
                                href="/bar_with_border"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                              >
                                <div
                                  className="loader_container"
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "background": "#4c4ea9",
                                      "display": "flex",
                                      "flex": "1",
                                      "height": "10em",
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <div
                                    className="loader"
                                  >
                                    <style>
                                      .barWithBorderLoader {
  width: 10em;
  border: 0.25em solid #fefefe;
}
.barWithBorderLoader .barWithBorderLoader__bar {
  width: 100%;
  opacity: 0;
  height: 1.5em;
  background: #fefefe;
  animation: barWithBorderLoaderAnim 2.5s infinite cubic-bezier(0.61, 0.33, 0.39, 0.79);
  transform-origin: 0% 50%;
}
@keyframes barWithBorderLoaderAnim {
  0% {
    transform: scaleX(0);
    opacity: 0;
  }
  5% {
    transform: scaleX(0);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  95% {
    transform: scaleX(1);
  }
  100% {
    transform: scaleX(1);
    opacity: 0;
  }
}
                                    </style>
                                    <div
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "<div class=\\"barWithBorderLoader\\">
  <div class=\\"barWithBorderLoader__bar\\"></div>
</div>",
                                        }
                                      }
                                    />
                                  </div>
                                </div>
                                <div
                                  className="grid_item_title"
                                >
                                  <p
                                    className="text bold"
                                    style={
                                      Object {
                                        "margin": 0,
                                      }
                                    }
                                  >
                                    Bar with Border
                                  </p>
                                </div>
                              </a>
                            </div>
                            <div
                              className="grid_item "
                              onClick={[Function]}
                            >
                              <a
                                href="/two_circles"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                              >
                                <div
                                  className="loader_container"
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "background": "#221d2a",
                                      "display": "flex",
                                      "flex": "1",
                                      "height": "10em",
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <div
                                    className="loader"
                                  >
                                    <style>
                                      .twoCircleLoader {
  width: 4em;
  height: 4em;
  position: relative;
}
.twoCircleLoader .twoCircleLoader__circle {
  width: 4em;
  height: 4em;
  border-radius: 4em;
  position: absolute;
  animation: twoCircleLoaderAnim 3s infinite cubic-bezier(0.65, 0.05, 0.36, 1);
}
.twoCircleLoader .twoCircleLoader__circle:nth-child(1) {
  background-color: #f1c40f;
  transform: scale(0);
  animation-delay: 1.5s;
}
.twoCircleLoader .twoCircleLoader__circle:nth-child(2) {
  background-color: #de4e40;
}
@keyframes twoCircleLoaderAnim {
  0% {
    transform: scale(0);
  }
  46% {
    transform: scale(1);
  }
  54% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}
                                    </style>
                                    <div
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "<div class=\\"twoCircleLoader\\">
  <div class=\\"twoCircleLoader__circle\\"></div>
  <div class=\\"twoCircleLoader__circle\\"></div>
</div>
      ",
                                        }
                                      }
                                    />
                                  </div>
                                </div>
                                <div
                                  className="grid_item_title"
                                >
                                  <p
                                    className="text bold"
                                    style={
                                      Object {
                                        "margin": 0,
                                      }
                                    }
                                  >
                                    Two Circles
                                  </p>
                                </div>
                              </a>
                            </div>
                            <div
                              className="grid_item "
                              onClick={[Function]}
                            >
                              <a
                                href="/single_orbit"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                              >
                                <div
                                  className="loader_container"
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "background": "#b6596c",
                                      "display": "flex",
                                      "flex": "1",
                                      "height": "10em",
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <div
                                    className="loader"
                                  >
                                    <style>
                                      .singleOrbitLoader {
  position: relative;
  top: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}
.singleOrbitLoader__circle {
  width: 3em;
  height: 3em;
  background-color: #fefefe;
  border-radius: 3em;
}
.singleOrbitLoader__orbit {
  position: absolute;
  width: 1.5em;
  height: 1.5em;
  background-color: #fefefe;
  border-radius: 3em;
  animation: 2s singleorbitloaderanim infinite linear;
}

@keyframes singleorbitloaderanim {
  from {
    transform: rotate(0deg) translate(-3em) rotate(0deg);
  }
  to {
    transform: rotate(360deg) translate(-3em) rotate(-360deg);
  }
}
                                    </style>
                                    <div
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "<div class=\\"singleOrbitLoader\\">
  <div class=\\"singleOrbitLoader__circle\\"></div>
  <div class=\\"singleOrbitLoader__orbit\\"></div>
</div>",
                                        }
                                      }
                                    />
                                  </div>
                                </div>
                                <div
                                  className="grid_item_title"
                                >
                                  <p
                                    className="text bold"
                                    style={
                                      Object {
                                        "margin": 0,
                                      }
                                    }
                                  >
                                    Single Orbit
                                  </p>
                                </div>
                              </a>
                            </div>
                            <div
                              className="grid_item "
                              onClick={[Function]}
                            >
                              <a
                                href="/dual_orbit"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                              >
                                <div
                                  className="loader_container"
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "background": "#b6599b",
                                      "display": "flex",
                                      "flex": "1",
                                      "height": "10em",
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <div
                                    className="loader"
                                  >
                                    <style>
                                      .dualOrbitLoader {
  position: relative;
  top: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}
.dualOrbitLoader__circle {
  width: 3em;
  height: 3em;
  background-color: #fefefe;
  border-radius: 3em;
}
.dualOrbitLoader__orbit {
  position: absolute;
  width: 1.5em;
  height: 1.5em;
  background-color: #fefefe;
  border-radius: 3em;
  animation: 2s dualOrbitLoaderanim infinite linear;
}
.dualOrbitLoader__orbit2 {
  position: absolute;
  width: 1.5em;
  height: 1.5em;
  transform: rotate(180deg);
}

@keyframes dualOrbitLoaderanim {
  from {
    transform: rotate(0deg) translate(-3em) rotate(0deg);
  }
  to {
    transform: rotate(360deg) translate(-3em) rotate(-360deg);
  }
}
                                    </style>
                                    <div
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "<div class=\\"dualOrbitLoader\\">
  <div class=\\"dualOrbitLoader__circle\\"></div>
  <div class=\\"dualOrbitLoader__orbit\\"></div>
  <div class=\\"dualOrbitLoader__orbit2\\">
    <div class=\\"dualOrbitLoader__orbit\\"></div>
  </div>
</div>",
                                        }
                                      }
                                    />
                                  </div>
                                </div>
                                <div
                                  className="grid_item_title"
                                >
                                  <p
                                    className="text bold"
                                    style={
                                      Object {
                                        "margin": 0,
                                      }
                                    }
                                  >
                                    Dual Orbit
                                  </p>
                                </div>
                              </a>
                            </div>
                            <div
                              className="grid_item "
                              onClick={[Function]}
                            >
                              <a
                                href="/vertical"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                              >
                                <div
                                  className="loader_container"
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "background": "#4a79cf",
                                      "display": "flex",
                                      "flex": "1",
                                      "height": "10em",
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <div
                                    className="loader"
                                  >
                                    <style>
                                      .verticalLoader {
  margin: 0 auto;
  width: 1.5em;
  height: 1.5em;
  border-radius: 1.5em;
  background-color: white;
  animation: verticalloaderanim 1s ease-in-out infinite;
  outline: 1px solid transparent;
}

@keyframes verticalloaderanim {
  0% {
    transform: translate(0, -2.5em);
  }
  50% {
    transform: translate(0, 2.5em);
  }
  100% {
    transform: translate(0, -2.5em);
  }
}
                                    </style>
                                    <div
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "<div class=\\"verticalLoader\\"></div>",
                                        }
                                      }
                                    />
                                  </div>
                                </div>
                                <div
                                  className="grid_item_title"
                                >
                                  <p
                                    className="text bold"
                                    style={
                                      Object {
                                        "margin": 0,
                                      }
                                    }
                                  >
                                    Vertical
                                  </p>
                                </div>
                              </a>
                            </div>
                            <div
                              className="grid_item "
                              onClick={[Function]}
                            >
                              <a
                                href="/three_dot"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                              >
                                <div
                                  className="loader_container"
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "background": "#34bd84",
                                      "display": "flex",
                                      "flex": "1",
                                      "height": "10em",
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <div
                                    className="loader"
                                  >
                                    <style>
                                      .threeDotLoader {
  margin: 0 auto;
  width: 5.6em;
}
.threeDotLoader .threeDotLoader__dot {
  width: 1.4em;
  height: 1.4em;
  border-radius: 1.4em;
  background-color: white;
  transform: scale(0);
  display: inline-block;
  animation: threedotloaderanim 1.6s infinite ease-in-out;
}
.threeDotLoader .threeDotLoader__dot:nth-child(1) {
  animation-delay: 0s;
}
.threeDotLoader .threeDotLoader__dot:nth-child(2) {
  animation-delay: 0.25s;
}
.threeDotLoader .threeDotLoader__dot:nth-child(3) {
  animation-delay: 0.5s;
}
.threeDotLoader .threeDotLoader__dot:nth-child(4) {
  animation-delay: 0.75s;
}

@keyframes threedotloaderanim {
  0% {
    transform: scale(0);
  }
  50% {
    transform: scale(1);
  }
  90% {
    transform: scale(0);
  }
  100% {
    transform: scale(0);
  }
}
                                    </style>
                                    <div
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "<div class=\\"threeDotLoader\\">
    <div class=\\"threeDotLoader__dot\\"></div>
    <div class=\\"threeDotLoader__dot\\"></div>
    <div class=\\"threeDotLoader__dot\\"></div>
  </div>",
                                        }
                                      }
                                    />
                                  </div>
                                </div>
                                <div
                                  className="grid_item_title"
                                >
                                  <p
                                    className="text bold"
                                    style={
                                      Object {
                                        "margin": 0,
                                      }
                                    }
                                  >
                                    Three Dot
                                  </p>
                                </div>
                              </a>
                            </div>
                            <div
                              className="grid_item "
                              onClick={[Function]}
                            >
                              <a
                                href="/cube_to_circle"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                              >
                                <div
                                  className="loader_container"
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "background": "#d74b48",
                                      "display": "flex",
                                      "flex": "1",
                                      "height": "10em",
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <div
                                    className="loader"
                                  >
                                    <style>
                                      .cubeToCircleLoader {
  width: 100px;
  height: 100px;
  transform: rotate(-45deg);
}
.cubeToCircleLoader .cubeToCircleLoader__cube {
  height: 20px;
  width: 20px;
  margin: 15px;
  background-color: #FEFEFE;
  float: right;
  animation: anim 2.5s infinite;
}
.cubeToCircleLoader .cubeToCircleLoader__cube:nth-child(1) {
  animation-name: cubeToCircleLoaderAnim1, cubeToCircleLoaderAnim;
}
@keyframes cubeToCircleLoaderAnim1 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(-50px, 0);
  }
}
.cubeToCircleLoader .cubeToCircleLoader__cube:nth-child(2) {
  animation-name: cubeToCircleLoaderAnim2, cubeToCircleLoaderAnim;
}
@keyframes cubeToCircleLoaderAnim2 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(0, 50px);
  }
}
.cubeToCircleLoader .cubeToCircleLoader__cube:nth-child(3) {
  animation-name: cubeToCircleLoaderAnim3, cubeToCircleLoaderAnim;
}
@keyframes cubeToCircleLoaderAnim3 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(0, -50px);
  }
}
.cubeToCircleLoader .cubeToCircleLoader__cube:nth-child(4) {
  animation-name: cubeToCircleLoaderAnim4, cubeToCircleLoaderAnim;
}
@keyframes cubeToCircleLoaderAnim4 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(50px, 0);
  }
}

@keyframes cubeToCircleLoaderAnim {
  0% {
    border-radius: 0px;
  }
  40% {
    border-radius: 40px;
  }
  60% {
    border-radius: 40px;
  }
  100% {
    border-radius: 0px;
  }
}
                                    </style>
                                    <div
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "<div class='cubeToCircleLoader'>
  <div class='cubeToCircleLoader__cube'></div>
  <div class='cubeToCircleLoader__cube'></div>
  <div class='cubeToCircleLoader__cube'></div>
  <div class='cubeToCircleLoader__cube'></div>
</div>",
                                        }
                                      }
                                    />
                                  </div>
                                </div>
                                <div
                                  className="grid_item_title"
                                >
                                  <p
                                    className="text bold"
                                    style={
                                      Object {
                                        "margin": 0,
                                      }
                                    }
                                  >
                                    Cube to Circle
                                  </p>
                                </div>
                              </a>
                            </div>
                            <div
                              className="grid_item "
                              onClick={[Function]}
                            >
                              <a
                                href="/circle_rotate"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                              >
                                <div
                                  className="loader_container"
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "background": "#9f3755",
                                      "display": "flex",
                                      "flex": "1",
                                      "height": "10em",
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <div
                                    className="loader"
                                  >
                                    <style>
                                      .circleRotateLoader {
  width: 100px;
  height: 100px;
  transform: rotate(0deg);
  animation: circleRotateLoaderAnim 1.5s infinite;
}
.circleRotateLoader__cube {
  height: 20px;
  width: 20px;
  margin: 15px;
  background-color: #ECECEC;
  float: right;
  border-radius: 50%;
}

@keyframes circleRotateLoaderAnim {
  0% {
    transform: rotate(0deg);
  }
  80% {
    transform: rotate(90deg);
  }
  100% {
    transform: rotate(90deg);
  }
}
                                    </style>
                                    <div
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "<div class='circleRotateLoader'>
  <div class='circleRotateLoader__cube'></div>
  <div class='circleRotateLoader__cube'></div>
  <div class='circleRotateLoader__cube'></div>
  <div class='circleRotateLoader__cube'></div>
</div>",
                                        }
                                      }
                                    />
                                  </div>
                                </div>
                                <div
                                  className="grid_item_title"
                                >
                                  <p
                                    className="text bold"
                                    style={
                                      Object {
                                        "margin": 0,
                                      }
                                    }
                                  >
                                    Circle Rotate
                                  </p>
                                </div>
                              </a>
                            </div>
                            <div
                              className="grid_item "
                              onClick={[Function]}
                            >
                              <a
                                href="/arc"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                              >
                                <div
                                  className="loader_container"
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "background": "#714eaf",
                                      "display": "flex",
                                      "flex": "1",
                                      "height": "10em",
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <div
                                    className="loader"
                                  >
                                    <style>
                                      .arcLoader {
  width: 60px;
  height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
}
.arcLoader__arc {
  border: 6px solid white;
  border-bottom-color: transparent;
  border-left-color: transparent;
  display: inline-block;
  min-width: 15px;
  min-height: 15px;
  padding: 7.5px;
  border-radius: 100%;
  border-bottom-color: transparent;
  animation: arcLoaderAnim 1.6s linear infinite;
}

@keyframes arcLoaderAnim {
  100% {
    transform: rotate(360deg);
  }
}
                                    </style>
                                    <div
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "<div class='arcLoader'>
  <div class='arcLoader__arc'></div>
</div>",
                                        }
                                      }
                                    />
                                  </div>
                                </div>
                                <div
                                  className="grid_item_title"
                                >
                                  <p
                                    className="text bold"
                                    style={
                                      Object {
                                        "margin": 0,
                                      }
                                    }
                                  >
                                    Arc
                                  </p>
                                </div>
                              </a>
                            </div>
                            <div
                              className="grid_item "
                              onClick={[Function]}
                            >
                              <a
                                href="/arc_circle"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                              >
                                <div
                                  className="loader_container"
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "background": "#4ca98b",
                                      "display": "flex",
                                      "flex": "1",
                                      "height": "10em",
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <div
                                    className="loader"
                                  >
                                    <style>
                                      .arcCircleLoader {
  width: 60px;
  height: 60px;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}
.arcCircleLoader__arc {
  position: absolute;
  border: 6px solid white;
  border-bottom-color: transparent;
  border-left-color: transparent;
  display: inline-block;
  min-width: 15px;
  min-height: 15px;
  padding: 7.5px;
  border-radius: 100%;
  border-bottom-color: transparent;
  animation: arcCircleLoaderAnim 1.6s linear infinite;
}
.arcCircleLoader__circle {
  position: absolute;
  border-radius: 50%;
  background: white;
  width: 20px;
  height: 20px;
}

@keyframes arcCircleLoaderAnim {
  100% {
    transform: rotate(360deg);
  }
}
                                    </style>
                                    <div
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "<div class='arcCircleLoader'>
  <div class='arcCircleLoader__arc'></div>
  <div class='arcCircleLoader__circle'></div>
</div>",
                                        }
                                      }
                                    />
                                  </div>
                                </div>
                                <div
                                  className="grid_item_title"
                                >
                                  <p
                                    className="text bold"
                                    style={
                                      Object {
                                        "margin": 0,
                                      }
                                    }
                                  >
                                    Arc Circle
                                  </p>
                                </div>
                              </a>
                            </div>
                            <div
                              className="grid_item "
                              onClick={[Function]}
                            >
                              <a
                                href="/double_arc"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "margin": 0,
                                  }
                                }
                              >
                                <div
                                  className="loader_container"
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "background": "#4c4ea9",
                                      "display": "flex",
                                      "flex": "1",
                                      "height": "10em",
                                      "justifyContent": "center",
                                    }
                                  }
                                >
                                  <div
                                    className="loader"
                                  >
                                    <style>
                                      .doubleArcLoader {
  width: 60px;
  height: 60px;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}
.doubleArcLoader__arc {
  position: absolute;
  border: 6px solid white;
  border-bottom-color: transparent;
  border-left-color: transparent;
  display: inline-block;
  min-width: 15px;
  min-height: 15px;
  padding: 7.5px;
  border-radius: 100%;
  border-bottom-color: transparent;
  animation: arcLoaderAnim 1.6s linear infinite;
}
.doubleArcLoader__arc--large {
  min-width: 34.2857142857px;
  min-height: 34.2857142857px;
  padding: 10px;
  animation: doubleArcLoaderLargeAnim 2.1s linear infinite;
}

@keyframes doubleArcLoaderAnim {
  100% {
    transform: rotate(360deg);
  }
}
@keyframes doubleArcLoaderLargeAnim {
  0% {
    transform: rotate(-180deg);
  }
  100% {
    transform: rotate(180deg);
  }
}
                                    </style>
                                    <div
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "<div class='doubleArcLoader'>
  <div class='doubleArcLoader__arc'></div>
  <div class='doubleArcLoader__arc doubleArcLoader__arc--large'></div>
</div>",
                                        }
                                      }
                                    />
                                  </div>
                                </div>
                                <div
                                  className="grid_item_title"
                                >
                                  <p
                                    className="text bold"
                                    style={
                                      Object {
                                        "margin": 0,
                                      }
                                    }
                                  >
                                    Double Arc
                                  </p>
                                </div>
                              </a>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        className="mobile_nav_tabs"
      >
        <button
          className="mobile_nav_tab "
          onClick={[Function]}
        >
          <div
            className="mobile_nav_tab_icon"
          >
            <svg
              baseProfile="tiny"
              fill="currentColor"
              height="1em"
              stroke="currentColor"
              strokeWidth="0"
              style={
                Object {
                  "color": undefined,
                }
              }
              version="1.2"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10.396 18.433c2.641-2.574 6.604-6.433 6.604-6.433s-3.963-3.859-6.604-6.433c-.363-.349-.853-.567-1.396-.567-1.104 0-2 .896-2 2v10c0 1.104.896 2 2 2 .543 0 1.033-.218 1.396-.567z"
              />
            </svg>
          </div>
          <p
            className="mobile_nav_tab_name"
          >
            Animation
          </p>
        </button>
        <button
          className="mobile_nav_tab "
          onClick={[Function]}
        >
          <div
            className="mobile_nav_tab_icon"
          >
            <svg
              baseProfile="tiny"
              fill="currentColor"
              height="1em"
              stroke="currentColor"
              strokeWidth="0"
              style={
                Object {
                  "color": undefined,
                }
              }
              version="1.2"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M8.171 18c-.512 0-1.023-.195-1.414-.586l-4.414-4.414 4.414-4.414c.781-.781 2.049-.781 2.828 0 .781.781.781 2.047 0 2.828l-1.585 1.586 1.585 1.586c.781.781.781 2.047 0 2.828-.39.391-.902.586-1.414.586zM15.829 18c-.512 0-1.024-.195-1.414-.586-.781-.781-.781-2.047 0-2.828l1.585-1.586-1.585-1.586c-.781-.781-.781-2.047 0-2.828.779-.781 2.047-.781 2.828 0l4.414 4.414-4.414 4.414c-.39.391-.902.586-1.414.586z"
              />
            </svg>
          </div>
          <p
            className="mobile_nav_tab_name"
          >
            Code
          </p>
        </button>
        <button
          className="mobile_nav_tab active"
          onClick={[Function]}
        >
          <div
            className="mobile_nav_tab_icon"
          >
            <svg
              baseProfile="tiny"
              fill="currentColor"
              height="1em"
              stroke="currentColor"
              strokeWidth="0"
              style={
                Object {
                  "color": undefined,
                }
              }
              version="1.2"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <circle
                cx="5"
                cy="19"
                r="2.5"
              />
              <circle
                cx="5"
                cy="12"
                r="2.5"
              />
              <circle
                cx="5"
                cy="5"
                r="2.5"
              />
              <circle
                cx="12"
                cy="19"
                r="2.5"
              />
              <circle
                cx="12"
                cy="12"
                r="2.5"
              />
              <circle
                cx="12"
                cy="5"
                r="2.5"
              />
              <circle
                cx="19"
                cy="19"
                r="2.5"
              />
              <circle
                cx="19"
                cy="12"
                r="2.5"
              />
              <circle
                cx="19"
                cy="5"
                r="2.5"
              />
            </svg>
          </div>
          <p
            className="mobile_nav_tab_name"
          >
            Library
          </p>
        </button>
      </div>
    </div>
  </div>
  <div
    className="Toastify"
  />
</div>
`;

exports[`Storyshots AppLoader With Content 1`] = `
<div
  className="app_loader"
>
  <div
    className="square_app_loader"
  >
    <div
      className="square"
    />
    <div
      className="square"
    />
    <div
      className="square"
    />
    <div
      className="square"
    />
  </div>
</div>
`;

exports[`Storyshots Button Primary 1`] = `
<button
  className="button primary"
>
  Button text
</button>
`;

exports[`Storyshots Button With Content 1`] = `
<button
  className="button primary"
>
  Button text
</button>
`;

exports[`Storyshots CodeBlock With Content 1`] = `
<div
  className="code_container"
>
  <div
    className="code_actions"
  >
    <button
      className="button primary"
      onClick={[Function]}
      title="Copy SCSS"
    >
      <svg
        fill="currentColor"
        height="1em"
        stroke="currentColor"
        strokeWidth="0"
        style={
          Object {
            "color": undefined,
          }
        }
        viewBox="0 0 384 512"
        width="1em"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z"
        />
      </svg>
    </button>
  </div>
  <div
    className="content_container"
  >
    <pre
      className="code_block"
      style={
        Object {
          "MozHyphens": "none",
          "MozTabSize": "4",
          "OTabSize": "4",
          "WebkitHyphens": "none",
          "background": "#f5f2f0",
          "color": "black",
          "fontFamily": "Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",
          "hyphens": "none",
          "lineHeight": "1.5",
          "margin": ".5em 0",
          "msHyphens": "none",
          "overflow": "auto",
          "padding": "1em",
          "tabSize": "4",
          "textAlign": "left",
          "textShadow": "0 1px white",
          "whiteSpace": "pre",
          "wordBreak": "normal",
          "wordSpacing": "normal",
          "wordWrap": "normal",
        }
      }
    >
      <code
        style={
          Object {
            "MozHyphens": "none",
            "MozTabSize": "4",
            "OTabSize": "4",
            "WebkitHyphens": "none",
            "background": "none",
            "color": "black",
            "fontFamily": "Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",
            "hyphens": "none",
            "lineHeight": "1.5",
            "msHyphens": "none",
            "tabSize": "4",
            "textAlign": "left",
            "textShadow": "0 1px white",
            "whiteSpace": "pre",
            "wordBreak": "normal",
            "wordSpacing": "normal",
            "wordWrap": "normal",
          }
        }
      >
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          <span
            className="token"
            style={
              Object {
                "color": "#e90",
              }
            }
          >
            $squareTiming
          </span>
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          :
        </span>
         
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          0.3
        </span>
        <span
          className="token unit"
          style={Object {}}
        >
          s
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          ;
        </span>
        

        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          <span
            className="token"
            style={
              Object {
                "color": "#e90",
              }
            }
          >
            $squareSize
          </span>
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          :
        </span>
         
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          4
        </span>
        <span
          className="token unit"
          style={Object {}}
        >
          em
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          ;
        </span>
        


        <span
          className="token"
          style={
            Object {
              "color": "#690",
            }
          }
        >
          .squareLoader 
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          {
        </span>
        
  
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          max-width
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          :
        </span>
         
        <span
          className="token"
          style={
            Object {
              "color": "#e90",
            }
          }
        >
          $squareSize
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          ;
        </span>
        
  
        <span
          className="token"
          style={
            Object {
              "color": "#690",
            }
          }
        >
          <span
            className="token parent"
            style={
              Object {
                "color": "#e90",
                "fontWeight": "bold",
              }
            }
          >
            &
          </span>
          __square 
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          {
        </span>
        
    
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          height
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          :
        </span>
         
        <span
          className="token"
          style={
            Object {
              "color": "#e90",
            }
          }
        >
          $squareSize
        </span>
        /
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          2
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          ;
        </span>
        
    
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          width
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          :
        </span>
         
        <span
          className="token"
          style={
            Object {
              "color": "#e90",
            }
          }
        >
          $squareSize
        </span>
        /
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          2
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          ;
        </span>
        
    
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          background-color
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          :
        </span>
         white
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          ;
        </span>
        
    
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          float
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          :
        </span>
         right
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          ;
        </span>
        
    
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          animation
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          :
        </span>
         squareLoaderAnim 
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          3
        </span>
        <span
          className="token unit"
          style={Object {}}
        >
          s
        </span>
         infinite
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          ;
        </span>
         
    &
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          :
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#DD4A68",
            }
          }
        >
          nth-child
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          (
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          1
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          )
        </span>
         
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          {
        </span>
        
      
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          float
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          :
        </span>
         left
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          ;
        </span>
         
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          }
        </span>
        
    
        <span
          className="token"
          style={
            Object {
              "color": "#07a",
            }
          }
        >
          @for
        </span>
         
        <span
          className="token"
          style={
            Object {
              "color": "#e90",
            }
          }
        >
          $i
        </span>
         
        <span
          className="token"
          style={
            Object {
              "color": "#07a",
            }
          }
        >
          from
        </span>
         
        <span
          className="token"
          style={
            Object {
              "color": "#690",
            }
          }
        >
          1 to 5 
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          {
        </span>
        
      &
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          :
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#DD4A68",
            }
          }
        >
          nth-child
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          (
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#e90",
            }
          }
        >
          #{$i}
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          )
        </span>
         
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          {
        </span>
        
        
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          animation-delay
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          :
        </span>
         
        <span
          className="token"
          style={
            Object {
              "color": "#e90",
            }
          }
        >
          $squareTiming
        </span>
        *
        <span
          className="token"
          style={
            Object {
              "color": "#e90",
            }
          }
        >
          $i
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          ;
        </span>
        
      
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          }
        </span>
        
    
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          }
        </span>
        
  
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          }
        </span>
        

        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          }
        </span>
        

        <span
          className="token"
          style={
            Object {
              "color": "#07a",
            }
          }
        >
          <span
            className="token rule"
            style={Object {}}
          >
            @keyframes
          </span>
           squareLoaderAnim
        </span>
         
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          {
        </span>
        
  
        <span
          className="token"
          style={
            Object {
              "color": "#690",
            }
          }
        >
          0% 
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          {
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          opacity
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          :
        </span>
         
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          1
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          ;
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          }
        </span>
        
  
        <span
          className="token"
          style={
            Object {
              "color": "#690",
            }
          }
        >
          40% 
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          {
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          opacity
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          :
        </span>
         
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          0
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          ;
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          }
        </span>
        
  
        <span
          className="token"
          style={
            Object {
              "color": "#690",
            }
          }
        >
          50% 
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          {
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          opacity
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          :
        </span>
         
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          0
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          ;
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          }
        </span>
        
  
        <span
          className="token"
          style={
            Object {
              "color": "#690",
            }
          }
        >
          90% 
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          {
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          opacity
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          :
        </span>
         
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          1
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          ;
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          }
        </span>
        
  
        <span
          className="token"
          style={
            Object {
              "color": "#690",
            }
          }
        >
          100% 
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          {
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          opacity
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          :
        </span>
         
        <span
          className="token"
          style={
            Object {
              "color": "#905",
            }
          }
        >
          1
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          ;
        </span>
        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          }
        </span>
        

        <span
          className="token"
          style={
            Object {
              "color": "#999",
            }
          }
        >
          }
        </span>
      </code>
    </pre>
  </div>
</div>
`;

exports[`Storyshots FilteredGrid With Content 1`] = `
<div
  className="filtered_grid"
>
  <div
    className="filtered_grid-search"
  >
    <div
      className="grid"
      style={
        Object {
          "gridTemplateColumns": "repeat(3, 1fr)",
        }
      }
    >
      <form
        className="search_form"
        onSubmit={[Function]}
      >
        <div
          className="input_box"
        >
          <div
            className="input_icon"
          >
            <svg
              fill="currentColor"
              height="1em"
              stroke="currentColor"
              strokeWidth="0"
              style={
                Object {
                  "color": undefined,
                }
              }
              viewBox="0 0 512 512"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
              />
            </svg>
          </div>
          <input
            className="text_input with-icon"
            name="text"
            onChange={[Function]}
            placeholder="Search loaders"
            value=""
          />
        </div>
      </form>
    </div>
  </div>
  <div
    className="filtered_grid-items"
  >
    <div
      className="grid"
      style={
        Object {
          "gridTemplateColumns": "repeat(3, 1fr)",
        }
      }
    >
      <div
        className="grid_item "
      >
        <p>
          Text 1
        </p>
      </div>
      <div
        className="grid_item "
      >
        <p>
          Text 2
        </p>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Grid With Content 1`] = `
<div
  className="grid"
  style={
    Object {
      "gridTemplateColumns": "repeat(1, 1fr)",
    }
  }
>
  <div
    className="grid_item "
  >
    <p>
      Item 1
    </p>
  </div>
  <div
    className="grid_item "
  >
    <p>
      Item 2
    </p>
  </div>
</div>
`;

exports[`Storyshots Grid With Content 3 Columns 1`] = `
<div
  className="grid"
  style={
    Object {
      "gridTemplateColumns": "repeat(3, 1fr)",
    }
  }
>
  <div
    className="grid_item "
  >
    <p>
      Item 1
    </p>
  </div>
  <div
    className="grid_item "
  >
    <p>
      Item 2
    </p>
  </div>
</div>
`;

exports[`Storyshots GridItem With Complex Content 1`] = `
<div
  className="grid_item "
>
  <div
    style={
      Object {
        "backgroundColor": "#22958b",
        "display": "flex",
        "justifyContent": "center",
        "padding": "4em",
      }
    }
  >
    <div
      className="loader"
    >
      <style>
        .hollowLoader {
  width: 3em;
  height: 3em;
  animation: hollowBoxLoaderAnim 1.25s infinite ease-in-out;
  outline: 1px solid transparent;
}
.hollowLoader .hollowLoader__largeBox {
  height: 3em;
  width: 3em;
  background-color: #ECECEC;
  outline: 1px solid transparent;
  position: fixed;
}
.hollowLoader .hollowLoader__smallBox {
  height: 3em;
  width: 3em;
  background-color: #22958b; //Change to colour of background
  position: fixed;
  z-index: 1;
  outline: 1px solid transparent;
  animation: hollowBoxLoaderSmallBoxAnim 1.25s alternate infinite ease-in-out;
}
@keyframes hollowBoxLoaderSmallBoxAnim {
  0% {
    -webkit-transform: scale(0.2);
    transform: scale(0.2);
  }
  100% {
    -webkit-transform: scale(0.75);
    transform: scale(0.75);
  }
}
@keyframes hollowBoxLoaderAnim {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(90deg);
    transform: rotate(90deg);
  }
}
      </style>
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "<div class=\\"hollowLoader\\">
  <div class=\\"hollowLoader__largeBox\\"></div>
  <div class=\\"hollowLoader__smallBox\\"></div>
</div>",
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots GridItem With Content 1`] = `
<div
  className="grid_item "
>
  <p>
    Content
  </p>
</div>
`;

exports[`Storyshots GridItem With Content Title 1`] = `
<div
  className="grid_item "
>
  <p>
    Content
  </p>
  <div
    className="grid_item_title"
  >
    <p>
      Title content
    </p>
  </div>
</div>
`;

exports[`Storyshots InputBox With All Props 1`] = `
<div
  className="input_box"
>
  <div
    className="input_icon"
  >
    <svg
      baseProfile="tiny"
      fill="currentColor"
      height="1em"
      stroke="currentColor"
      strokeWidth="0"
      style={
        Object {
          "color": undefined,
        }
      }
      version="1.2"
      viewBox="0 0 24 24"
      width="1em"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M17 9c0-1.381-.56-2.631-1.464-3.535-.905-.905-2.155-1.465-3.536-1.465s-2.631.56-3.536 1.465c-.904.904-1.464 2.154-1.464 3.535s.56 2.631 1.464 3.535c.905.905 2.155 1.465 3.536 1.465s2.631-.56 3.536-1.465c.904-.904 1.464-2.154 1.464-3.535zM6 19c0 1 2.25 2 6 2 3.518 0 6-1 6-2 0-2-2.354-4-6-4-3.75 0-6 2-6 4z"
      />
    </svg>
  </div>
  <input
    className="text_input with-icon"
    name="text"
    onChange={[Function]}
    placeholder="Placeholder text"
    value=""
  />
</div>
`;

exports[`Storyshots InputBox With Basic Props 1`] = `
<div
  className="input_box"
>
  <input
    className="text_input "
    name="text"
    onChange={[Function]}
    placeholder="Placeholder text"
    value=""
  />
</div>
`;

exports[`Storyshots InputBox With Clear Button 1`] = `
<div
  className="input_box"
>
  <input
    className="text_input "
    name="text"
    onChange={[Function]}
    placeholder="Placeholder text"
    value=""
  />
</div>
`;

exports[`Storyshots InputBox With Icon 1`] = `
<div
  className="input_box"
>
  <div
    className="input_icon"
  >
    <svg
      baseProfile="tiny"
      fill="currentColor"
      height="1em"
      stroke="currentColor"
      strokeWidth="0"
      style={
        Object {
          "color": undefined,
        }
      }
      version="1.2"
      viewBox="0 0 24 24"
      width="1em"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M17 9c0-1.381-.56-2.631-1.464-3.535-.905-.905-2.155-1.465-3.536-1.465s-2.631.56-3.536 1.465c-.904.904-1.464 2.154-1.464 3.535s.56 2.631 1.464 3.535c.905.905 2.155 1.465 3.536 1.465s2.631-.56 3.536-1.465c.904-.904 1.464-2.154 1.464-3.535zM6 19c0 1 2.25 2 6 2 3.518 0 6-1 6-2 0-2-2.354-4-6-4-3.75 0-6 2-6 4z"
      />
    </svg>
  </div>
  <input
    className="text_input with-icon"
    name="text"
    onChange={[Function]}
    placeholder="Placeholder text"
    value=""
  />
</div>
`;

exports[`Storyshots Loader With Content 1`] = `
<div
  className="loader"
>
  <style>
    .hollowLoader {
  width: 3em;
  height: 3em;
  animation: hollowBoxLoaderAnim 1.25s infinite ease-in-out;
  outline: 1px solid transparent;
}
.hollowLoader .hollowLoader__largeBox {
  height: 3em;
  width: 3em;
  background-color: #ECECEC;
  outline: 1px solid transparent;
  position: fixed;
}
.hollowLoader .hollowLoader__smallBox {
  height: 3em;
  width: 3em;
  background-color: #22958b; //Change to colour of background
  position: fixed;
  z-index: 1;
  outline: 1px solid transparent;
  animation: hollowBoxLoaderSmallBoxAnim 1.25s alternate infinite ease-in-out;
}
@keyframes hollowBoxLoaderSmallBoxAnim {
  0% {
    -webkit-transform: scale(0.2);
    transform: scale(0.2);
  }
  100% {
    -webkit-transform: scale(0.75);
    transform: scale(0.75);
  }
}
@keyframes hollowBoxLoaderAnim {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(90deg);
    transform: rotate(90deg);
  }
}
  </style>
  <div
    dangerouslySetInnerHTML={
      Object {
        "__html": "<div class=\\"hollowLoader\\">
  <div class=\\"hollowLoader__largeBox\\"></div>
  <div class=\\"hollowLoader__smallBox\\"></div>
</div>",
      }
    }
  />
</div>
`;

exports[`Storyshots LoaderSelection Element 1`] = `
<div
  className="loader_selection"
>
  <div
    className="filtered_grid"
  >
    <div
      className="filtered_grid-search"
    >
      <div
        className="grid"
        style={
          Object {
            "gridTemplateColumns": "repeat(1, 1fr)",
          }
        }
      >
        <form
          className="search_form"
          onSubmit={[Function]}
        >
          <div
            className="input_box"
          >
            <div
              className="input_icon"
            >
              <svg
                fill="currentColor"
                height="1em"
                stroke="currentColor"
                strokeWidth="0"
                style={
                  Object {
                    "color": undefined,
                  }
                }
                viewBox="0 0 512 512"
                width="1em"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                />
              </svg>
            </div>
            <input
              className="text_input with-icon"
              name="text"
              onChange={[Function]}
              placeholder="Search loaders"
              value=""
            />
          </div>
        </form>
      </div>
    </div>
    <div
      className="filtered_grid-items"
    >
      <div
        className="grid"
        style={
          Object {
            "gridTemplateColumns": "repeat(1, 1fr)",
          }
        }
      >
        <div
          className="grid_item active"
          onClick={[Function]}
        >
          <a
            href="/square"
            onClick={[Function]}
            style={
              Object {
                "margin": 0,
              }
            }
          >
            <div
              className="loader_container"
              style={
                Object {
                  "alignItems": "center",
                  "background": "#d74b48",
                  "display": "flex",
                  "flex": "1",
                  "height": "10em",
                  "justifyContent": "center",
                }
              }
            >
              <div
                className="loader"
              >
                <style>
                  .squareLoader {
    max-width: 4em;
}
.squareLoader .squareLoader__square {
  height: 2em;
  width: 2em;
  background-color: white;
  float: right;
  animation: squareLoaderAnim 3s infinite;
}
.squareLoader .squareLoader__square:nth-child(1) {
  float: left;
}
.squareLoader .squareLoader__square:nth-child(1) {
  animation-delay: 0.3s;
}
.squareLoader .squareLoader__square:nth-child(2) {
  animation-delay: 0.6s;
}
.squareLoader .squareLoader__square:nth-child(3) {
  animation-delay: 0.9s;
}
.squareLoader .squareLoader__square:nth-child(4) {
  animation-delay: 1.2s;
}
  
@keyframes squareLoaderAnim {
  0% {
    opacity: 1;
  }
  40% {
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  90% {
    opacity: 1;
  }
  100% {
    opacity: 1;
  }
}
                </style>
                <div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class='squareLoader'>
  <div class='squareLoader__square'></div>
  <div class='squareLoader__square'></div>
  <div class='squareLoader__square'></div>
  <div class='squareLoader__square'></div>
</div>",
                    }
                  }
                />
              </div>
            </div>
            <div
              className="grid_item_title"
            >
              <p
                className="text bold"
                style={
                  Object {
                    "margin": 0,
                  }
                }
              >
                Square
              </p>
            </div>
          </a>
        </div>
        <div
          className="grid_item "
          onClick={[Function]}
        >
          <a
            href="/heartbeat"
            onClick={[Function]}
            style={
              Object {
                "margin": 0,
              }
            }
          >
            <div
              className="loader_container"
              style={
                Object {
                  "alignItems": "center",
                  "background": "#9a40a9",
                  "display": "flex",
                  "flex": "1",
                  "height": "10em",
                  "justifyContent": "center",
                }
              }
            >
              <div
                className="loader"
              >
                <style>
                  .heartbeatLoader {
  width: 4em;
  height: 4em;
  position: relative;
}
.heartbeatLoader .heartbeatLoader__pulse {
  width: 4em;
  height: 4em;
  border-radius: 50%;
  position: absolute;
  background-color: white;
  animation: heartbeatLoaderAnim 1.2s ease-in-out infinite;
  transform: scale(0);
  outline: 1px solid transparent;
}
.heartbeatLoader .heartbeatLoader__pulse:nth-child(2) {
  animation-delay: 0.22s;
}
@keyframes heartbeatLoaderAnim {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
    opacity: 0;
  }
}
                </style>
                <div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class=\\"heartbeatLoader\\">
  <div class=\\"heartbeatLoader__pulse\\"></div>
  <div class=\\"heartbeatLoader__pulse\\"></div>
</div>",
                    }
                  }
                />
              </div>
            </div>
            <div
              className="grid_item_title"
            >
              <p
                className="text bold"
                style={
                  Object {
                    "margin": 0,
                  }
                }
              >
                Heartbeat
              </p>
            </div>
          </a>
        </div>
        <div
          className="grid_item "
          onClick={[Function]}
        >
          <a
            href="/slider"
            onClick={[Function]}
            style={
              Object {
                "margin": 0,
              }
            }
          >
            <div
              className="loader_container"
              style={
                Object {
                  "alignItems": "center",
                  "background": "#714eaf",
                  "display": "flex",
                  "flex": "1",
                  "height": "10em",
                  "justifyContent": "center",
                }
              }
            >
              <div
                className="loader"
              >
                <style>
                  .sliderLoader {
  display: flex;
  justify-content: center;
  align-items: center;
}
.sliderLoader .sliderLoader__rect {
  height: 20px;
  width: 8px;
  background-color: white;
  display: inline-block;
  animation: sliderLoaderAnim 1.4s ease-in-out infinite;
  margin-right: 4px;
}
.sliderLoader .sliderLoader__rect:nth-child(1) {
  animation-delay: 0.15s;
}
.sliderLoader .sliderLoader__rect:nth-child(2) {
  animation-delay: 0.3s;
}
.sliderLoader .sliderLoader__rect:nth-child(3) {
  animation-delay: 0.45s;
}
.sliderLoader .sliderLoader__rect:nth-child(4) {
  animation-delay: 0.6s;
}
.sliderLoader .sliderLoader__rect:nth-child(5) {
  animation-delay: 0.75s;
}
@keyframes sliderLoaderAnim {
  0% {
    transform: scaleY(1);
  }
  25% {
    transform: scaleY(3);
  }
  50% {
    transform: scaleY(1);
  }
  100% {
    transform: scaleY(1);
  }
}
                </style>
                <div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class='sliderLoader'>
  <div class='sliderLoader__rect'></div>
  <div class='sliderLoader__rect'></div>
  <div class='sliderLoader__rect'></div>
  <div class='sliderLoader__rect'></div>
  <div class='sliderLoader__rect'></div>
</div>
        ",
                    }
                  }
                />
              </div>
            </div>
            <div
              className="grid_item_title"
            >
              <p
                className="text bold"
                style={
                  Object {
                    "margin": 0,
                  }
                }
              >
                Slider
              </p>
            </div>
          </a>
        </div>
        <div
          className="grid_item "
          onClick={[Function]}
        >
          <a
            href="/hollow_box"
            onClick={[Function]}
            style={
              Object {
                "margin": 0,
              }
            }
          >
            <div
              className="loader_container"
              style={
                Object {
                  "alignItems": "center",
                  "background": "#22958b",
                  "display": "flex",
                  "flex": "1",
                  "height": "10em",
                  "justifyContent": "center",
                }
              }
            >
              <div
                className="loader"
              >
                <style>
                  .hollowLoader {
  width: 3em;
  height: 3em;
  animation: hollowBoxLoaderAnim 1.25s infinite ease-in-out;
  outline: 1px solid transparent;
}
.hollowLoader .hollowLoader__largeBox {
  height: 3em;
  width: 3em;
  background-color: #ECECEC;
  outline: 1px solid transparent;
  position: fixed;
}
.hollowLoader .hollowLoader__smallBox {
  height: 3em;
  width: 3em;
  background-color: #22958b; //Change to colour of background
  position: fixed;
  z-index: 1;
  outline: 1px solid transparent;
  animation: hollowBoxLoaderSmallBoxAnim 1.25s alternate infinite ease-in-out;
}
@keyframes hollowBoxLoaderSmallBoxAnim {
  0% {
    -webkit-transform: scale(0.2);
    transform: scale(0.2);
  }
  100% {
    -webkit-transform: scale(0.75);
    transform: scale(0.75);
  }
}
@keyframes hollowBoxLoaderAnim {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(90deg);
    transform: rotate(90deg);
  }
}
                </style>
                <div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class=\\"hollowLoader\\">
  <div class=\\"hollowLoader__largeBox\\"></div>
  <div class=\\"hollowLoader__smallBox\\"></div>
</div>",
                    }
                  }
                />
              </div>
            </div>
            <div
              className="grid_item_title"
            >
              <p
                className="text bold"
                style={
                  Object {
                    "margin": 0,
                  }
                }
              >
                Hollow Box
              </p>
            </div>
          </a>
        </div>
        <div
          className="grid_item "
          onClick={[Function]}
        >
          <a
            href="/pulse"
            onClick={[Function]}
            style={
              Object {
                "margin": 0,
              }
            }
          >
            <div
              className="loader_container"
              style={
                Object {
                  "alignItems": "center",
                  "background": "#62af65",
                  "display": "flex",
                  "flex": "1",
                  "height": "10em",
                  "justifyContent": "center",
                }
              }
            >
              <div
                className="loader"
              >
                <style>
                  .pulseLoader {
  width: 4em;
  height: 4em;
  border-radius: 4em;
  background-color: white;
  outline: 1px solid transparent;
  animation: pulseLoaderAnim 1.2s ease-in-out infinite;
}
@keyframes pulseLoaderAnim {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
    opacity: 0;
  }
}
                </style>
                <div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class='pulseLoader'></div>
    ",
                    }
                  }
                />
              </div>
            </div>
            <div
              className="grid_item_title"
            >
              <p
                className="text bold"
                style={
                  Object {
                    "margin": 0,
                  }
                }
              >
                Pulse
              </p>
            </div>
          </a>
        </div>
        <div
          className="grid_item "
          onClick={[Function]}
        >
          <a
            href="/bar"
            onClick={[Function]}
            style={
              Object {
                "margin": 0,
              }
            }
          >
            <div
              className="loader_container"
              style={
                Object {
                  "alignItems": "center",
                  "background": "#e6653c",
                  "display": "flex",
                  "flex": "1",
                  "height": "10em",
                  "justifyContent": "center",
                }
              }
            >
              <div
                className="loader"
              >
                <style>
                  .barLoader {
  width: 10em;
}
.barLoader .barLoader__bar {
  width: 100%;
  opacity: 0;
  height: 1.5em;
  background: #fefefe;
  animation: barLoaderAnim 2.5s infinite cubic-bezier(0.61, 0.33, 0.39, 0.79);
  transform-origin: 0% 50%;
}
@keyframes barLoaderAnim {
  0% {
    transform: scaleX(0);
    opacity: 0;
  }
  5% {
    transform: scaleX(0);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  95% {
    transform: scaleX(1);
  }
  100% {
    transform: scaleX(1);
    opacity: 0;
  }
}
                </style>
                <div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class=\\"barLoader\\">
  <div class=\\"barLoader__bar\\"></div>
</div>",
                    }
                  }
                />
              </div>
            </div>
            <div
              className="grid_item_title"
            >
              <p
                className="text bold"
                style={
                  Object {
                    "margin": 0,
                  }
                }
              >
                Bar
              </p>
            </div>
          </a>
        </div>
        <div
          className="grid_item "
          onClick={[Function]}
        >
          <a
            href="/bar_with_border"
            onClick={[Function]}
            style={
              Object {
                "margin": 0,
              }
            }
          >
            <div
              className="loader_container"
              style={
                Object {
                  "alignItems": "center",
                  "background": "#4c4ea9",
                  "display": "flex",
                  "flex": "1",
                  "height": "10em",
                  "justifyContent": "center",
                }
              }
            >
              <div
                className="loader"
              >
                <style>
                  .barWithBorderLoader {
  width: 10em;
  border: 0.25em solid #fefefe;
}
.barWithBorderLoader .barWithBorderLoader__bar {
  width: 100%;
  opacity: 0;
  height: 1.5em;
  background: #fefefe;
  animation: barWithBorderLoaderAnim 2.5s infinite cubic-bezier(0.61, 0.33, 0.39, 0.79);
  transform-origin: 0% 50%;
}
@keyframes barWithBorderLoaderAnim {
  0% {
    transform: scaleX(0);
    opacity: 0;
  }
  5% {
    transform: scaleX(0);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  95% {
    transform: scaleX(1);
  }
  100% {
    transform: scaleX(1);
    opacity: 0;
  }
}
                </style>
                <div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class=\\"barWithBorderLoader\\">
  <div class=\\"barWithBorderLoader__bar\\"></div>
</div>",
                    }
                  }
                />
              </div>
            </div>
            <div
              className="grid_item_title"
            >
              <p
                className="text bold"
                style={
                  Object {
                    "margin": 0,
                  }
                }
              >
                Bar with Border
              </p>
            </div>
          </a>
        </div>
        <div
          className="grid_item "
          onClick={[Function]}
        >
          <a
            href="/two_circles"
            onClick={[Function]}
            style={
              Object {
                "margin": 0,
              }
            }
          >
            <div
              className="loader_container"
              style={
                Object {
                  "alignItems": "center",
                  "background": "#221d2a",
                  "display": "flex",
                  "flex": "1",
                  "height": "10em",
                  "justifyContent": "center",
                }
              }
            >
              <div
                className="loader"
              >
                <style>
                  .twoCircleLoader {
  width: 4em;
  height: 4em;
  position: relative;
}
.twoCircleLoader .twoCircleLoader__circle {
  width: 4em;
  height: 4em;
  border-radius: 4em;
  position: absolute;
  animation: twoCircleLoaderAnim 3s infinite cubic-bezier(0.65, 0.05, 0.36, 1);
}
.twoCircleLoader .twoCircleLoader__circle:nth-child(1) {
  background-color: #f1c40f;
  transform: scale(0);
  animation-delay: 1.5s;
}
.twoCircleLoader .twoCircleLoader__circle:nth-child(2) {
  background-color: #de4e40;
}
@keyframes twoCircleLoaderAnim {
  0% {
    transform: scale(0);
  }
  46% {
    transform: scale(1);
  }
  54% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}
                </style>
                <div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class=\\"twoCircleLoader\\">
  <div class=\\"twoCircleLoader__circle\\"></div>
  <div class=\\"twoCircleLoader__circle\\"></div>
</div>
      ",
                    }
                  }
                />
              </div>
            </div>
            <div
              className="grid_item_title"
            >
              <p
                className="text bold"
                style={
                  Object {
                    "margin": 0,
                  }
                }
              >
                Two Circles
              </p>
            </div>
          </a>
        </div>
        <div
          className="grid_item "
          onClick={[Function]}
        >
          <a
            href="/single_orbit"
            onClick={[Function]}
            style={
              Object {
                "margin": 0,
              }
            }
          >
            <div
              className="loader_container"
              style={
                Object {
                  "alignItems": "center",
                  "background": "#b6596c",
                  "display": "flex",
                  "flex": "1",
                  "height": "10em",
                  "justifyContent": "center",
                }
              }
            >
              <div
                className="loader"
              >
                <style>
                  .singleOrbitLoader {
  position: relative;
  top: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}
.singleOrbitLoader__circle {
  width: 3em;
  height: 3em;
  background-color: #fefefe;
  border-radius: 3em;
}
.singleOrbitLoader__orbit {
  position: absolute;
  width: 1.5em;
  height: 1.5em;
  background-color: #fefefe;
  border-radius: 3em;
  animation: 2s singleorbitloaderanim infinite linear;
}

@keyframes singleorbitloaderanim {
  from {
    transform: rotate(0deg) translate(-3em) rotate(0deg);
  }
  to {
    transform: rotate(360deg) translate(-3em) rotate(-360deg);
  }
}
                </style>
                <div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class=\\"singleOrbitLoader\\">
  <div class=\\"singleOrbitLoader__circle\\"></div>
  <div class=\\"singleOrbitLoader__orbit\\"></div>
</div>",
                    }
                  }
                />
              </div>
            </div>
            <div
              className="grid_item_title"
            >
              <p
                className="text bold"
                style={
                  Object {
                    "margin": 0,
                  }
                }
              >
                Single Orbit
              </p>
            </div>
          </a>
        </div>
        <div
          className="grid_item "
          onClick={[Function]}
        >
          <a
            href="/dual_orbit"
            onClick={[Function]}
            style={
              Object {
                "margin": 0,
              }
            }
          >
            <div
              className="loader_container"
              style={
                Object {
                  "alignItems": "center",
                  "background": "#b6599b",
                  "display": "flex",
                  "flex": "1",
                  "height": "10em",
                  "justifyContent": "center",
                }
              }
            >
              <div
                className="loader"
              >
                <style>
                  .dualOrbitLoader {
  position: relative;
  top: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}
.dualOrbitLoader__circle {
  width: 3em;
  height: 3em;
  background-color: #fefefe;
  border-radius: 3em;
}
.dualOrbitLoader__orbit {
  position: absolute;
  width: 1.5em;
  height: 1.5em;
  background-color: #fefefe;
  border-radius: 3em;
  animation: 2s dualOrbitLoaderanim infinite linear;
}
.dualOrbitLoader__orbit2 {
  position: absolute;
  width: 1.5em;
  height: 1.5em;
  transform: rotate(180deg);
}

@keyframes dualOrbitLoaderanim {
  from {
    transform: rotate(0deg) translate(-3em) rotate(0deg);
  }
  to {
    transform: rotate(360deg) translate(-3em) rotate(-360deg);
  }
}
                </style>
                <div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class=\\"dualOrbitLoader\\">
  <div class=\\"dualOrbitLoader__circle\\"></div>
  <div class=\\"dualOrbitLoader__orbit\\"></div>
  <div class=\\"dualOrbitLoader__orbit2\\">
    <div class=\\"dualOrbitLoader__orbit\\"></div>
  </div>
</div>",
                    }
                  }
                />
              </div>
            </div>
            <div
              className="grid_item_title"
            >
              <p
                className="text bold"
                style={
                  Object {
                    "margin": 0,
                  }
                }
              >
                Dual Orbit
              </p>
            </div>
          </a>
        </div>
        <div
          className="grid_item "
          onClick={[Function]}
        >
          <a
            href="/vertical"
            onClick={[Function]}
            style={
              Object {
                "margin": 0,
              }
            }
          >
            <div
              className="loader_container"
              style={
                Object {
                  "alignItems": "center",
                  "background": "#4a79cf",
                  "display": "flex",
                  "flex": "1",
                  "height": "10em",
                  "justifyContent": "center",
                }
              }
            >
              <div
                className="loader"
              >
                <style>
                  .verticalLoader {
  margin: 0 auto;
  width: 1.5em;
  height: 1.5em;
  border-radius: 1.5em;
  background-color: white;
  animation: verticalloaderanim 1s ease-in-out infinite;
  outline: 1px solid transparent;
}

@keyframes verticalloaderanim {
  0% {
    transform: translate(0, -2.5em);
  }
  50% {
    transform: translate(0, 2.5em);
  }
  100% {
    transform: translate(0, -2.5em);
  }
}
                </style>
                <div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class=\\"verticalLoader\\"></div>",
                    }
                  }
                />
              </div>
            </div>
            <div
              className="grid_item_title"
            >
              <p
                className="text bold"
                style={
                  Object {
                    "margin": 0,
                  }
                }
              >
                Vertical
              </p>
            </div>
          </a>
        </div>
        <div
          className="grid_item "
          onClick={[Function]}
        >
          <a
            href="/three_dot"
            onClick={[Function]}
            style={
              Object {
                "margin": 0,
              }
            }
          >
            <div
              className="loader_container"
              style={
                Object {
                  "alignItems": "center",
                  "background": "#34bd84",
                  "display": "flex",
                  "flex": "1",
                  "height": "10em",
                  "justifyContent": "center",
                }
              }
            >
              <div
                className="loader"
              >
                <style>
                  .threeDotLoader {
  margin: 0 auto;
  width: 5.6em;
}
.threeDotLoader .threeDotLoader__dot {
  width: 1.4em;
  height: 1.4em;
  border-radius: 1.4em;
  background-color: white;
  transform: scale(0);
  display: inline-block;
  animation: threedotloaderanim 1.6s infinite ease-in-out;
}
.threeDotLoader .threeDotLoader__dot:nth-child(1) {
  animation-delay: 0s;
}
.threeDotLoader .threeDotLoader__dot:nth-child(2) {
  animation-delay: 0.25s;
}
.threeDotLoader .threeDotLoader__dot:nth-child(3) {
  animation-delay: 0.5s;
}
.threeDotLoader .threeDotLoader__dot:nth-child(4) {
  animation-delay: 0.75s;
}

@keyframes threedotloaderanim {
  0% {
    transform: scale(0);
  }
  50% {
    transform: scale(1);
  }
  90% {
    transform: scale(0);
  }
  100% {
    transform: scale(0);
  }
}
                </style>
                <div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class=\\"threeDotLoader\\">
    <div class=\\"threeDotLoader__dot\\"></div>
    <div class=\\"threeDotLoader__dot\\"></div>
    <div class=\\"threeDotLoader__dot\\"></div>
  </div>",
                    }
                  }
                />
              </div>
            </div>
            <div
              className="grid_item_title"
            >
              <p
                className="text bold"
                style={
                  Object {
                    "margin": 0,
                  }
                }
              >
                Three Dot
              </p>
            </div>
          </a>
        </div>
        <div
          className="grid_item "
          onClick={[Function]}
        >
          <a
            href="/cube_to_circle"
            onClick={[Function]}
            style={
              Object {
                "margin": 0,
              }
            }
          >
            <div
              className="loader_container"
              style={
                Object {
                  "alignItems": "center",
                  "background": "#d74b48",
                  "display": "flex",
                  "flex": "1",
                  "height": "10em",
                  "justifyContent": "center",
                }
              }
            >
              <div
                className="loader"
              >
                <style>
                  .cubeToCircleLoader {
  width: 100px;
  height: 100px;
  transform: rotate(-45deg);
}
.cubeToCircleLoader .cubeToCircleLoader__cube {
  height: 20px;
  width: 20px;
  margin: 15px;
  background-color: #FEFEFE;
  float: right;
  animation: anim 2.5s infinite;
}
.cubeToCircleLoader .cubeToCircleLoader__cube:nth-child(1) {
  animation-name: cubeToCircleLoaderAnim1, cubeToCircleLoaderAnim;
}
@keyframes cubeToCircleLoaderAnim1 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(-50px, 0);
  }
}
.cubeToCircleLoader .cubeToCircleLoader__cube:nth-child(2) {
  animation-name: cubeToCircleLoaderAnim2, cubeToCircleLoaderAnim;
}
@keyframes cubeToCircleLoaderAnim2 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(0, 50px);
  }
}
.cubeToCircleLoader .cubeToCircleLoader__cube:nth-child(3) {
  animation-name: cubeToCircleLoaderAnim3, cubeToCircleLoaderAnim;
}
@keyframes cubeToCircleLoaderAnim3 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(0, -50px);
  }
}
.cubeToCircleLoader .cubeToCircleLoader__cube:nth-child(4) {
  animation-name: cubeToCircleLoaderAnim4, cubeToCircleLoaderAnim;
}
@keyframes cubeToCircleLoaderAnim4 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(50px, 0);
  }
}

@keyframes cubeToCircleLoaderAnim {
  0% {
    border-radius: 0px;
  }
  40% {
    border-radius: 40px;
  }
  60% {
    border-radius: 40px;
  }
  100% {
    border-radius: 0px;
  }
}
                </style>
                <div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class='cubeToCircleLoader'>
  <div class='cubeToCircleLoader__cube'></div>
  <div class='cubeToCircleLoader__cube'></div>
  <div class='cubeToCircleLoader__cube'></div>
  <div class='cubeToCircleLoader__cube'></div>
</div>",
                    }
                  }
                />
              </div>
            </div>
            <div
              className="grid_item_title"
            >
              <p
                className="text bold"
                style={
                  Object {
                    "margin": 0,
                  }
                }
              >
                Cube to Circle
              </p>
            </div>
          </a>
        </div>
        <div
          className="grid_item "
          onClick={[Function]}
        >
          <a
            href="/circle_rotate"
            onClick={[Function]}
            style={
              Object {
                "margin": 0,
              }
            }
          >
            <div
              className="loader_container"
              style={
                Object {
                  "alignItems": "center",
                  "background": "#9f3755",
                  "display": "flex",
                  "flex": "1",
                  "height": "10em",
                  "justifyContent": "center",
                }
              }
            >
              <div
                className="loader"
              >
                <style>
                  .circleRotateLoader {
  width: 100px;
  height: 100px;
  transform: rotate(0deg);
  animation: circleRotateLoaderAnim 1.5s infinite;
}
.circleRotateLoader__cube {
  height: 20px;
  width: 20px;
  margin: 15px;
  background-color: #ECECEC;
  float: right;
  border-radius: 50%;
}

@keyframes circleRotateLoaderAnim {
  0% {
    transform: rotate(0deg);
  }
  80% {
    transform: rotate(90deg);
  }
  100% {
    transform: rotate(90deg);
  }
}
                </style>
                <div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class='circleRotateLoader'>
  <div class='circleRotateLoader__cube'></div>
  <div class='circleRotateLoader__cube'></div>
  <div class='circleRotateLoader__cube'></div>
  <div class='circleRotateLoader__cube'></div>
</div>",
                    }
                  }
                />
              </div>
            </div>
            <div
              className="grid_item_title"
            >
              <p
                className="text bold"
                style={
                  Object {
                    "margin": 0,
                  }
                }
              >
                Circle Rotate
              </p>
            </div>
          </a>
        </div>
        <div
          className="grid_item "
          onClick={[Function]}
        >
          <a
            href="/arc"
            onClick={[Function]}
            style={
              Object {
                "margin": 0,
              }
            }
          >
            <div
              className="loader_container"
              style={
                Object {
                  "alignItems": "center",
                  "background": "#714eaf",
                  "display": "flex",
                  "flex": "1",
                  "height": "10em",
                  "justifyContent": "center",
                }
              }
            >
              <div
                className="loader"
              >
                <style>
                  .arcLoader {
  width: 60px;
  height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
}
.arcLoader__arc {
  border: 6px solid white;
  border-bottom-color: transparent;
  border-left-color: transparent;
  display: inline-block;
  min-width: 15px;
  min-height: 15px;
  padding: 7.5px;
  border-radius: 100%;
  border-bottom-color: transparent;
  animation: arcLoaderAnim 1.6s linear infinite;
}

@keyframes arcLoaderAnim {
  100% {
    transform: rotate(360deg);
  }
}
                </style>
                <div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class='arcLoader'>
  <div class='arcLoader__arc'></div>
</div>",
                    }
                  }
                />
              </div>
            </div>
            <div
              className="grid_item_title"
            >
              <p
                className="text bold"
                style={
                  Object {
                    "margin": 0,
                  }
                }
              >
                Arc
              </p>
            </div>
          </a>
        </div>
        <div
          className="grid_item "
          onClick={[Function]}
        >
          <a
            href="/arc_circle"
            onClick={[Function]}
            style={
              Object {
                "margin": 0,
              }
            }
          >
            <div
              className="loader_container"
              style={
                Object {
                  "alignItems": "center",
                  "background": "#4ca98b",
                  "display": "flex",
                  "flex": "1",
                  "height": "10em",
                  "justifyContent": "center",
                }
              }
            >
              <div
                className="loader"
              >
                <style>
                  .arcCircleLoader {
  width: 60px;
  height: 60px;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}
.arcCircleLoader__arc {
  position: absolute;
  border: 6px solid white;
  border-bottom-color: transparent;
  border-left-color: transparent;
  display: inline-block;
  min-width: 15px;
  min-height: 15px;
  padding: 7.5px;
  border-radius: 100%;
  border-bottom-color: transparent;
  animation: arcCircleLoaderAnim 1.6s linear infinite;
}
.arcCircleLoader__circle {
  position: absolute;
  border-radius: 50%;
  background: white;
  width: 20px;
  height: 20px;
}

@keyframes arcCircleLoaderAnim {
  100% {
    transform: rotate(360deg);
  }
}
                </style>
                <div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class='arcCircleLoader'>
  <div class='arcCircleLoader__arc'></div>
  <div class='arcCircleLoader__circle'></div>
</div>",
                    }
                  }
                />
              </div>
            </div>
            <div
              className="grid_item_title"
            >
              <p
                className="text bold"
                style={
                  Object {
                    "margin": 0,
                  }
                }
              >
                Arc Circle
              </p>
            </div>
          </a>
        </div>
        <div
          className="grid_item "
          onClick={[Function]}
        >
          <a
            href="/double_arc"
            onClick={[Function]}
            style={
              Object {
                "margin": 0,
              }
            }
          >
            <div
              className="loader_container"
              style={
                Object {
                  "alignItems": "center",
                  "background": "#4c4ea9",
                  "display": "flex",
                  "flex": "1",
                  "height": "10em",
                  "justifyContent": "center",
                }
              }
            >
              <div
                className="loader"
              >
                <style>
                  .doubleArcLoader {
  width: 60px;
  height: 60px;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}
.doubleArcLoader__arc {
  position: absolute;
  border: 6px solid white;
  border-bottom-color: transparent;
  border-left-color: transparent;
  display: inline-block;
  min-width: 15px;
  min-height: 15px;
  padding: 7.5px;
  border-radius: 100%;
  border-bottom-color: transparent;
  animation: arcLoaderAnim 1.6s linear infinite;
}
.doubleArcLoader__arc--large {
  min-width: 34.2857142857px;
  min-height: 34.2857142857px;
  padding: 10px;
  animation: doubleArcLoaderLargeAnim 2.1s linear infinite;
}

@keyframes doubleArcLoaderAnim {
  100% {
    transform: rotate(360deg);
  }
}
@keyframes doubleArcLoaderLargeAnim {
  0% {
    transform: rotate(-180deg);
  }
  100% {
    transform: rotate(180deg);
  }
}
                </style>
                <div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<div class='doubleArcLoader'>
  <div class='doubleArcLoader__arc'></div>
  <div class='doubleArcLoader__arc doubleArcLoader__arc--large'></div>
</div>",
                    }
                  }
                />
              </div>
            </div>
            <div
              className="grid_item_title"
            >
              <p
                className="text bold"
                style={
                  Object {
                    "margin": 0,
                  }
                }
              >
                Double Arc
              </p>
            </div>
          </a>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Loaders With Content 1`] = `
<div
  className="row"
  style={
    Object {
      "height": "calc(100% - 45px)",
    }
  }
>
  <div
    className="column"
    style={
      Object {
        "height": "100%",
        "width": "50%",
      }
    }
  >
    <div
      className="row"
      style={
        Object {
          "height": "50%",
          "position": "relative",
        }
      }
    >
      <h1
        className="heading text-center text-white"
        style={
          Object {
            "position": "absolute",
            "top": "20%",
            "width": "100%",
          }
        }
      >
        Square
      </h1>
      <div
        style={
          Object {
            "alignItems": "center",
            "background": "#d74b48",
            "display": "flex",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <div
          className="loader"
        >
          <style>
            .squareLoader {
    max-width: 4em;
}
.squareLoader .squareLoader__square {
  height: 2em;
  width: 2em;
  background-color: white;
  float: right;
  animation: squareLoaderAnim 3s infinite;
}
.squareLoader .squareLoader__square:nth-child(1) {
  float: left;
}
.squareLoader .squareLoader__square:nth-child(1) {
  animation-delay: 0.3s;
}
.squareLoader .squareLoader__square:nth-child(2) {
  animation-delay: 0.6s;
}
.squareLoader .squareLoader__square:nth-child(3) {
  animation-delay: 0.9s;
}
.squareLoader .squareLoader__square:nth-child(4) {
  animation-delay: 1.2s;
}
  
@keyframes squareLoaderAnim {
  0% {
    opacity: 1;
  }
  40% {
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  90% {
    opacity: 1;
  }
  100% {
    opacity: 1;
  }
}
          </style>
          <div
            dangerouslySetInnerHTML={
              Object {
                "__html": "<div class='squareLoader'>
  <div class='squareLoader__square'></div>
  <div class='squareLoader__square'></div>
  <div class='squareLoader__square'></div>
  <div class='squareLoader__square'></div>
</div>",
              }
            }
          />
        </div>
      </div>
    </div>
    <div
      className="row"
      style={
        Object {
          "height": "50%",
        }
      }
    >
      <div
        className="content_container"
      >
        <div
          className="content"
        >
          <div
            className="loader_selection"
          >
            <div
              className="filtered_grid"
            >
              <div
                className="filtered_grid-search"
              >
                <div
                  className="grid"
                  style={
                    Object {
                      "gridTemplateColumns": "repeat(1, 1fr)",
                    }
                  }
                >
                  <form
                    className="search_form"
                    onSubmit={[Function]}
                  >
                    <div
                      className="input_box"
                    >
                      <div
                        className="input_icon"
                      >
                        <svg
                          fill="currentColor"
                          height="1em"
                          stroke="currentColor"
                          strokeWidth="0"
                          style={
                            Object {
                              "color": undefined,
                            }
                          }
                          viewBox="0 0 512 512"
                          width="1em"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                          />
                        </svg>
                      </div>
                      <input
                        className="text_input with-icon"
                        name="text"
                        onChange={[Function]}
                        placeholder="Search loaders"
                        value=""
                      />
                    </div>
                  </form>
                </div>
              </div>
              <div
                className="filtered_grid-items"
              >
                <div
                  className="grid"
                  style={
                    Object {
                      "gridTemplateColumns": "repeat(1, 1fr)",
                    }
                  }
                >
                  <div
                    className="grid_item active"
                    onClick={[Function]}
                  >
                    <a
                      href="/square"
                      onClick={[Function]}
                      style={
                        Object {
                          "margin": 0,
                        }
                      }
                    >
                      <div
                        className="loader_container"
                        style={
                          Object {
                            "alignItems": "center",
                            "background": "#d74b48",
                            "display": "flex",
                            "flex": "1",
                            "height": "10em",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <div
                          className="loader"
                        >
                          <style>
                            .squareLoader {
    max-width: 4em;
}
.squareLoader .squareLoader__square {
  height: 2em;
  width: 2em;
  background-color: white;
  float: right;
  animation: squareLoaderAnim 3s infinite;
}
.squareLoader .squareLoader__square:nth-child(1) {
  float: left;
}
.squareLoader .squareLoader__square:nth-child(1) {
  animation-delay: 0.3s;
}
.squareLoader .squareLoader__square:nth-child(2) {
  animation-delay: 0.6s;
}
.squareLoader .squareLoader__square:nth-child(3) {
  animation-delay: 0.9s;
}
.squareLoader .squareLoader__square:nth-child(4) {
  animation-delay: 1.2s;
}
  
@keyframes squareLoaderAnim {
  0% {
    opacity: 1;
  }
  40% {
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  90% {
    opacity: 1;
  }
  100% {
    opacity: 1;
  }
}
                          </style>
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<div class='squareLoader'>
  <div class='squareLoader__square'></div>
  <div class='squareLoader__square'></div>
  <div class='squareLoader__square'></div>
  <div class='squareLoader__square'></div>
</div>",
                              }
                            }
                          />
                        </div>
                      </div>
                      <div
                        className="grid_item_title"
                      >
                        <p
                          className="text bold"
                          style={
                            Object {
                              "margin": 0,
                            }
                          }
                        >
                          Square
                        </p>
                      </div>
                    </a>
                  </div>
                  <div
                    className="grid_item "
                    onClick={[Function]}
                  >
                    <a
                      href="/heartbeat"
                      onClick={[Function]}
                      style={
                        Object {
                          "margin": 0,
                        }
                      }
                    >
                      <div
                        className="loader_container"
                        style={
                          Object {
                            "alignItems": "center",
                            "background": "#9a40a9",
                            "display": "flex",
                            "flex": "1",
                            "height": "10em",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <div
                          className="loader"
                        >
                          <style>
                            .heartbeatLoader {
  width: 4em;
  height: 4em;
  position: relative;
}
.heartbeatLoader .heartbeatLoader__pulse {
  width: 4em;
  height: 4em;
  border-radius: 50%;
  position: absolute;
  background-color: white;
  animation: heartbeatLoaderAnim 1.2s ease-in-out infinite;
  transform: scale(0);
  outline: 1px solid transparent;
}
.heartbeatLoader .heartbeatLoader__pulse:nth-child(2) {
  animation-delay: 0.22s;
}
@keyframes heartbeatLoaderAnim {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
    opacity: 0;
  }
}
                          </style>
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<div class=\\"heartbeatLoader\\">
  <div class=\\"heartbeatLoader__pulse\\"></div>
  <div class=\\"heartbeatLoader__pulse\\"></div>
</div>",
                              }
                            }
                          />
                        </div>
                      </div>
                      <div
                        className="grid_item_title"
                      >
                        <p
                          className="text bold"
                          style={
                            Object {
                              "margin": 0,
                            }
                          }
                        >
                          Heartbeat
                        </p>
                      </div>
                    </a>
                  </div>
                  <div
                    className="grid_item "
                    onClick={[Function]}
                  >
                    <a
                      href="/slider"
                      onClick={[Function]}
                      style={
                        Object {
                          "margin": 0,
                        }
                      }
                    >
                      <div
                        className="loader_container"
                        style={
                          Object {
                            "alignItems": "center",
                            "background": "#714eaf",
                            "display": "flex",
                            "flex": "1",
                            "height": "10em",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <div
                          className="loader"
                        >
                          <style>
                            .sliderLoader {
  display: flex;
  justify-content: center;
  align-items: center;
}
.sliderLoader .sliderLoader__rect {
  height: 20px;
  width: 8px;
  background-color: white;
  display: inline-block;
  animation: sliderLoaderAnim 1.4s ease-in-out infinite;
  margin-right: 4px;
}
.sliderLoader .sliderLoader__rect:nth-child(1) {
  animation-delay: 0.15s;
}
.sliderLoader .sliderLoader__rect:nth-child(2) {
  animation-delay: 0.3s;
}
.sliderLoader .sliderLoader__rect:nth-child(3) {
  animation-delay: 0.45s;
}
.sliderLoader .sliderLoader__rect:nth-child(4) {
  animation-delay: 0.6s;
}
.sliderLoader .sliderLoader__rect:nth-child(5) {
  animation-delay: 0.75s;
}
@keyframes sliderLoaderAnim {
  0% {
    transform: scaleY(1);
  }
  25% {
    transform: scaleY(3);
  }
  50% {
    transform: scaleY(1);
  }
  100% {
    transform: scaleY(1);
  }
}
                          </style>
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<div class='sliderLoader'>
  <div class='sliderLoader__rect'></div>
  <div class='sliderLoader__rect'></div>
  <div class='sliderLoader__rect'></div>
  <div class='sliderLoader__rect'></div>
  <div class='sliderLoader__rect'></div>
</div>
        ",
                              }
                            }
                          />
                        </div>
                      </div>
                      <div
                        className="grid_item_title"
                      >
                        <p
                          className="text bold"
                          style={
                            Object {
                              "margin": 0,
                            }
                          }
                        >
                          Slider
                        </p>
                      </div>
                    </a>
                  </div>
                  <div
                    className="grid_item "
                    onClick={[Function]}
                  >
                    <a
                      href="/hollow_box"
                      onClick={[Function]}
                      style={
                        Object {
                          "margin": 0,
                        }
                      }
                    >
                      <div
                        className="loader_container"
                        style={
                          Object {
                            "alignItems": "center",
                            "background": "#22958b",
                            "display": "flex",
                            "flex": "1",
                            "height": "10em",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <div
                          className="loader"
                        >
                          <style>
                            .hollowLoader {
  width: 3em;
  height: 3em;
  animation: hollowBoxLoaderAnim 1.25s infinite ease-in-out;
  outline: 1px solid transparent;
}
.hollowLoader .hollowLoader__largeBox {
  height: 3em;
  width: 3em;
  background-color: #ECECEC;
  outline: 1px solid transparent;
  position: fixed;
}
.hollowLoader .hollowLoader__smallBox {
  height: 3em;
  width: 3em;
  background-color: #22958b; //Change to colour of background
  position: fixed;
  z-index: 1;
  outline: 1px solid transparent;
  animation: hollowBoxLoaderSmallBoxAnim 1.25s alternate infinite ease-in-out;
}
@keyframes hollowBoxLoaderSmallBoxAnim {
  0% {
    -webkit-transform: scale(0.2);
    transform: scale(0.2);
  }
  100% {
    -webkit-transform: scale(0.75);
    transform: scale(0.75);
  }
}
@keyframes hollowBoxLoaderAnim {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(90deg);
    transform: rotate(90deg);
  }
}
                          </style>
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<div class=\\"hollowLoader\\">
  <div class=\\"hollowLoader__largeBox\\"></div>
  <div class=\\"hollowLoader__smallBox\\"></div>
</div>",
                              }
                            }
                          />
                        </div>
                      </div>
                      <div
                        className="grid_item_title"
                      >
                        <p
                          className="text bold"
                          style={
                            Object {
                              "margin": 0,
                            }
                          }
                        >
                          Hollow Box
                        </p>
                      </div>
                    </a>
                  </div>
                  <div
                    className="grid_item "
                    onClick={[Function]}
                  >
                    <a
                      href="/pulse"
                      onClick={[Function]}
                      style={
                        Object {
                          "margin": 0,
                        }
                      }
                    >
                      <div
                        className="loader_container"
                        style={
                          Object {
                            "alignItems": "center",
                            "background": "#62af65",
                            "display": "flex",
                            "flex": "1",
                            "height": "10em",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <div
                          className="loader"
                        >
                          <style>
                            .pulseLoader {
  width: 4em;
  height: 4em;
  border-radius: 4em;
  background-color: white;
  outline: 1px solid transparent;
  animation: pulseLoaderAnim 1.2s ease-in-out infinite;
}
@keyframes pulseLoaderAnim {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
    opacity: 0;
  }
}
                          </style>
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<div class='pulseLoader'></div>
    ",
                              }
                            }
                          />
                        </div>
                      </div>
                      <div
                        className="grid_item_title"
                      >
                        <p
                          className="text bold"
                          style={
                            Object {
                              "margin": 0,
                            }
                          }
                        >
                          Pulse
                        </p>
                      </div>
                    </a>
                  </div>
                  <div
                    className="grid_item "
                    onClick={[Function]}
                  >
                    <a
                      href="/bar"
                      onClick={[Function]}
                      style={
                        Object {
                          "margin": 0,
                        }
                      }
                    >
                      <div
                        className="loader_container"
                        style={
                          Object {
                            "alignItems": "center",
                            "background": "#e6653c",
                            "display": "flex",
                            "flex": "1",
                            "height": "10em",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <div
                          className="loader"
                        >
                          <style>
                            .barLoader {
  width: 10em;
}
.barLoader .barLoader__bar {
  width: 100%;
  opacity: 0;
  height: 1.5em;
  background: #fefefe;
  animation: barLoaderAnim 2.5s infinite cubic-bezier(0.61, 0.33, 0.39, 0.79);
  transform-origin: 0% 50%;
}
@keyframes barLoaderAnim {
  0% {
    transform: scaleX(0);
    opacity: 0;
  }
  5% {
    transform: scaleX(0);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  95% {
    transform: scaleX(1);
  }
  100% {
    transform: scaleX(1);
    opacity: 0;
  }
}
                          </style>
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<div class=\\"barLoader\\">
  <div class=\\"barLoader__bar\\"></div>
</div>",
                              }
                            }
                          />
                        </div>
                      </div>
                      <div
                        className="grid_item_title"
                      >
                        <p
                          className="text bold"
                          style={
                            Object {
                              "margin": 0,
                            }
                          }
                        >
                          Bar
                        </p>
                      </div>
                    </a>
                  </div>
                  <div
                    className="grid_item "
                    onClick={[Function]}
                  >
                    <a
                      href="/bar_with_border"
                      onClick={[Function]}
                      style={
                        Object {
                          "margin": 0,
                        }
                      }
                    >
                      <div
                        className="loader_container"
                        style={
                          Object {
                            "alignItems": "center",
                            "background": "#4c4ea9",
                            "display": "flex",
                            "flex": "1",
                            "height": "10em",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <div
                          className="loader"
                        >
                          <style>
                            .barWithBorderLoader {
  width: 10em;
  border: 0.25em solid #fefefe;
}
.barWithBorderLoader .barWithBorderLoader__bar {
  width: 100%;
  opacity: 0;
  height: 1.5em;
  background: #fefefe;
  animation: barWithBorderLoaderAnim 2.5s infinite cubic-bezier(0.61, 0.33, 0.39, 0.79);
  transform-origin: 0% 50%;
}
@keyframes barWithBorderLoaderAnim {
  0% {
    transform: scaleX(0);
    opacity: 0;
  }
  5% {
    transform: scaleX(0);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  95% {
    transform: scaleX(1);
  }
  100% {
    transform: scaleX(1);
    opacity: 0;
  }
}
                          </style>
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<div class=\\"barWithBorderLoader\\">
  <div class=\\"barWithBorderLoader__bar\\"></div>
</div>",
                              }
                            }
                          />
                        </div>
                      </div>
                      <div
                        className="grid_item_title"
                      >
                        <p
                          className="text bold"
                          style={
                            Object {
                              "margin": 0,
                            }
                          }
                        >
                          Bar with Border
                        </p>
                      </div>
                    </a>
                  </div>
                  <div
                    className="grid_item "
                    onClick={[Function]}
                  >
                    <a
                      href="/two_circles"
                      onClick={[Function]}
                      style={
                        Object {
                          "margin": 0,
                        }
                      }
                    >
                      <div
                        className="loader_container"
                        style={
                          Object {
                            "alignItems": "center",
                            "background": "#221d2a",
                            "display": "flex",
                            "flex": "1",
                            "height": "10em",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <div
                          className="loader"
                        >
                          <style>
                            .twoCircleLoader {
  width: 4em;
  height: 4em;
  position: relative;
}
.twoCircleLoader .twoCircleLoader__circle {
  width: 4em;
  height: 4em;
  border-radius: 4em;
  position: absolute;
  animation: twoCircleLoaderAnim 3s infinite cubic-bezier(0.65, 0.05, 0.36, 1);
}
.twoCircleLoader .twoCircleLoader__circle:nth-child(1) {
  background-color: #f1c40f;
  transform: scale(0);
  animation-delay: 1.5s;
}
.twoCircleLoader .twoCircleLoader__circle:nth-child(2) {
  background-color: #de4e40;
}
@keyframes twoCircleLoaderAnim {
  0% {
    transform: scale(0);
  }
  46% {
    transform: scale(1);
  }
  54% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}
                          </style>
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<div class=\\"twoCircleLoader\\">
  <div class=\\"twoCircleLoader__circle\\"></div>
  <div class=\\"twoCircleLoader__circle\\"></div>
</div>
      ",
                              }
                            }
                          />
                        </div>
                      </div>
                      <div
                        className="grid_item_title"
                      >
                        <p
                          className="text bold"
                          style={
                            Object {
                              "margin": 0,
                            }
                          }
                        >
                          Two Circles
                        </p>
                      </div>
                    </a>
                  </div>
                  <div
                    className="grid_item "
                    onClick={[Function]}
                  >
                    <a
                      href="/single_orbit"
                      onClick={[Function]}
                      style={
                        Object {
                          "margin": 0,
                        }
                      }
                    >
                      <div
                        className="loader_container"
                        style={
                          Object {
                            "alignItems": "center",
                            "background": "#b6596c",
                            "display": "flex",
                            "flex": "1",
                            "height": "10em",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <div
                          className="loader"
                        >
                          <style>
                            .singleOrbitLoader {
  position: relative;
  top: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}
.singleOrbitLoader__circle {
  width: 3em;
  height: 3em;
  background-color: #fefefe;
  border-radius: 3em;
}
.singleOrbitLoader__orbit {
  position: absolute;
  width: 1.5em;
  height: 1.5em;
  background-color: #fefefe;
  border-radius: 3em;
  animation: 2s singleorbitloaderanim infinite linear;
}

@keyframes singleorbitloaderanim {
  from {
    transform: rotate(0deg) translate(-3em) rotate(0deg);
  }
  to {
    transform: rotate(360deg) translate(-3em) rotate(-360deg);
  }
}
                          </style>
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<div class=\\"singleOrbitLoader\\">
  <div class=\\"singleOrbitLoader__circle\\"></div>
  <div class=\\"singleOrbitLoader__orbit\\"></div>
</div>",
                              }
                            }
                          />
                        </div>
                      </div>
                      <div
                        className="grid_item_title"
                      >
                        <p
                          className="text bold"
                          style={
                            Object {
                              "margin": 0,
                            }
                          }
                        >
                          Single Orbit
                        </p>
                      </div>
                    </a>
                  </div>
                  <div
                    className="grid_item "
                    onClick={[Function]}
                  >
                    <a
                      href="/dual_orbit"
                      onClick={[Function]}
                      style={
                        Object {
                          "margin": 0,
                        }
                      }
                    >
                      <div
                        className="loader_container"
                        style={
                          Object {
                            "alignItems": "center",
                            "background": "#b6599b",
                            "display": "flex",
                            "flex": "1",
                            "height": "10em",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <div
                          className="loader"
                        >
                          <style>
                            .dualOrbitLoader {
  position: relative;
  top: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}
.dualOrbitLoader__circle {
  width: 3em;
  height: 3em;
  background-color: #fefefe;
  border-radius: 3em;
}
.dualOrbitLoader__orbit {
  position: absolute;
  width: 1.5em;
  height: 1.5em;
  background-color: #fefefe;
  border-radius: 3em;
  animation: 2s dualOrbitLoaderanim infinite linear;
}
.dualOrbitLoader__orbit2 {
  position: absolute;
  width: 1.5em;
  height: 1.5em;
  transform: rotate(180deg);
}

@keyframes dualOrbitLoaderanim {
  from {
    transform: rotate(0deg) translate(-3em) rotate(0deg);
  }
  to {
    transform: rotate(360deg) translate(-3em) rotate(-360deg);
  }
}
                          </style>
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<div class=\\"dualOrbitLoader\\">
  <div class=\\"dualOrbitLoader__circle\\"></div>
  <div class=\\"dualOrbitLoader__orbit\\"></div>
  <div class=\\"dualOrbitLoader__orbit2\\">
    <div class=\\"dualOrbitLoader__orbit\\"></div>
  </div>
</div>",
                              }
                            }
                          />
                        </div>
                      </div>
                      <div
                        className="grid_item_title"
                      >
                        <p
                          className="text bold"
                          style={
                            Object {
                              "margin": 0,
                            }
                          }
                        >
                          Dual Orbit
                        </p>
                      </div>
                    </a>
                  </div>
                  <div
                    className="grid_item "
                    onClick={[Function]}
                  >
                    <a
                      href="/vertical"
                      onClick={[Function]}
                      style={
                        Object {
                          "margin": 0,
                        }
                      }
                    >
                      <div
                        className="loader_container"
                        style={
                          Object {
                            "alignItems": "center",
                            "background": "#4a79cf",
                            "display": "flex",
                            "flex": "1",
                            "height": "10em",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <div
                          className="loader"
                        >
                          <style>
                            .verticalLoader {
  margin: 0 auto;
  width: 1.5em;
  height: 1.5em;
  border-radius: 1.5em;
  background-color: white;
  animation: verticalloaderanim 1s ease-in-out infinite;
  outline: 1px solid transparent;
}

@keyframes verticalloaderanim {
  0% {
    transform: translate(0, -2.5em);
  }
  50% {
    transform: translate(0, 2.5em);
  }
  100% {
    transform: translate(0, -2.5em);
  }
}
                          </style>
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<div class=\\"verticalLoader\\"></div>",
                              }
                            }
                          />
                        </div>
                      </div>
                      <div
                        className="grid_item_title"
                      >
                        <p
                          className="text bold"
                          style={
                            Object {
                              "margin": 0,
                            }
                          }
                        >
                          Vertical
                        </p>
                      </div>
                    </a>
                  </div>
                  <div
                    className="grid_item "
                    onClick={[Function]}
                  >
                    <a
                      href="/three_dot"
                      onClick={[Function]}
                      style={
                        Object {
                          "margin": 0,
                        }
                      }
                    >
                      <div
                        className="loader_container"
                        style={
                          Object {
                            "alignItems": "center",
                            "background": "#34bd84",
                            "display": "flex",
                            "flex": "1",
                            "height": "10em",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <div
                          className="loader"
                        >
                          <style>
                            .threeDotLoader {
  margin: 0 auto;
  width: 5.6em;
}
.threeDotLoader .threeDotLoader__dot {
  width: 1.4em;
  height: 1.4em;
  border-radius: 1.4em;
  background-color: white;
  transform: scale(0);
  display: inline-block;
  animation: threedotloaderanim 1.6s infinite ease-in-out;
}
.threeDotLoader .threeDotLoader__dot:nth-child(1) {
  animation-delay: 0s;
}
.threeDotLoader .threeDotLoader__dot:nth-child(2) {
  animation-delay: 0.25s;
}
.threeDotLoader .threeDotLoader__dot:nth-child(3) {
  animation-delay: 0.5s;
}
.threeDotLoader .threeDotLoader__dot:nth-child(4) {
  animation-delay: 0.75s;
}

@keyframes threedotloaderanim {
  0% {
    transform: scale(0);
  }
  50% {
    transform: scale(1);
  }
  90% {
    transform: scale(0);
  }
  100% {
    transform: scale(0);
  }
}
                          </style>
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<div class=\\"threeDotLoader\\">
    <div class=\\"threeDotLoader__dot\\"></div>
    <div class=\\"threeDotLoader__dot\\"></div>
    <div class=\\"threeDotLoader__dot\\"></div>
  </div>",
                              }
                            }
                          />
                        </div>
                      </div>
                      <div
                        className="grid_item_title"
                      >
                        <p
                          className="text bold"
                          style={
                            Object {
                              "margin": 0,
                            }
                          }
                        >
                          Three Dot
                        </p>
                      </div>
                    </a>
                  </div>
                  <div
                    className="grid_item "
                    onClick={[Function]}
                  >
                    <a
                      href="/cube_to_circle"
                      onClick={[Function]}
                      style={
                        Object {
                          "margin": 0,
                        }
                      }
                    >
                      <div
                        className="loader_container"
                        style={
                          Object {
                            "alignItems": "center",
                            "background": "#d74b48",
                            "display": "flex",
                            "flex": "1",
                            "height": "10em",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <div
                          className="loader"
                        >
                          <style>
                            .cubeToCircleLoader {
  width: 100px;
  height: 100px;
  transform: rotate(-45deg);
}
.cubeToCircleLoader .cubeToCircleLoader__cube {
  height: 20px;
  width: 20px;
  margin: 15px;
  background-color: #FEFEFE;
  float: right;
  animation: anim 2.5s infinite;
}
.cubeToCircleLoader .cubeToCircleLoader__cube:nth-child(1) {
  animation-name: cubeToCircleLoaderAnim1, cubeToCircleLoaderAnim;
}
@keyframes cubeToCircleLoaderAnim1 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(-50px, 0);
  }
}
.cubeToCircleLoader .cubeToCircleLoader__cube:nth-child(2) {
  animation-name: cubeToCircleLoaderAnim2, cubeToCircleLoaderAnim;
}
@keyframes cubeToCircleLoaderAnim2 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(0, 50px);
  }
}
.cubeToCircleLoader .cubeToCircleLoader__cube:nth-child(3) {
  animation-name: cubeToCircleLoaderAnim3, cubeToCircleLoaderAnim;
}
@keyframes cubeToCircleLoaderAnim3 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(0, -50px);
  }
}
.cubeToCircleLoader .cubeToCircleLoader__cube:nth-child(4) {
  animation-name: cubeToCircleLoaderAnim4, cubeToCircleLoaderAnim;
}
@keyframes cubeToCircleLoaderAnim4 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(50px, 0);
  }
}

@keyframes cubeToCircleLoaderAnim {
  0% {
    border-radius: 0px;
  }
  40% {
    border-radius: 40px;
  }
  60% {
    border-radius: 40px;
  }
  100% {
    border-radius: 0px;
  }
}
                          </style>
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<div class='cubeToCircleLoader'>
  <div class='cubeToCircleLoader__cube'></div>
  <div class='cubeToCircleLoader__cube'></div>
  <div class='cubeToCircleLoader__cube'></div>
  <div class='cubeToCircleLoader__cube'></div>
</div>",
                              }
                            }
                          />
                        </div>
                      </div>
                      <div
                        className="grid_item_title"
                      >
                        <p
                          className="text bold"
                          style={
                            Object {
                              "margin": 0,
                            }
                          }
                        >
                          Cube to Circle
                        </p>
                      </div>
                    </a>
                  </div>
                  <div
                    className="grid_item "
                    onClick={[Function]}
                  >
                    <a
                      href="/circle_rotate"
                      onClick={[Function]}
                      style={
                        Object {
                          "margin": 0,
                        }
                      }
                    >
                      <div
                        className="loader_container"
                        style={
                          Object {
                            "alignItems": "center",
                            "background": "#9f3755",
                            "display": "flex",
                            "flex": "1",
                            "height": "10em",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <div
                          className="loader"
                        >
                          <style>
                            .circleRotateLoader {
  width: 100px;
  height: 100px;
  transform: rotate(0deg);
  animation: circleRotateLoaderAnim 1.5s infinite;
}
.circleRotateLoader__cube {
  height: 20px;
  width: 20px;
  margin: 15px;
  background-color: #ECECEC;
  float: right;
  border-radius: 50%;
}

@keyframes circleRotateLoaderAnim {
  0% {
    transform: rotate(0deg);
  }
  80% {
    transform: rotate(90deg);
  }
  100% {
    transform: rotate(90deg);
  }
}
                          </style>
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<div class='circleRotateLoader'>
  <div class='circleRotateLoader__cube'></div>
  <div class='circleRotateLoader__cube'></div>
  <div class='circleRotateLoader__cube'></div>
  <div class='circleRotateLoader__cube'></div>
</div>",
                              }
                            }
                          />
                        </div>
                      </div>
                      <div
                        className="grid_item_title"
                      >
                        <p
                          className="text bold"
                          style={
                            Object {
                              "margin": 0,
                            }
                          }
                        >
                          Circle Rotate
                        </p>
                      </div>
                    </a>
                  </div>
                  <div
                    className="grid_item "
                    onClick={[Function]}
                  >
                    <a
                      href="/arc"
                      onClick={[Function]}
                      style={
                        Object {
                          "margin": 0,
                        }
                      }
                    >
                      <div
                        className="loader_container"
                        style={
                          Object {
                            "alignItems": "center",
                            "background": "#714eaf",
                            "display": "flex",
                            "flex": "1",
                            "height": "10em",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <div
                          className="loader"
                        >
                          <style>
                            .arcLoader {
  width: 60px;
  height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
}
.arcLoader__arc {
  border: 6px solid white;
  border-bottom-color: transparent;
  border-left-color: transparent;
  display: inline-block;
  min-width: 15px;
  min-height: 15px;
  padding: 7.5px;
  border-radius: 100%;
  border-bottom-color: transparent;
  animation: arcLoaderAnim 1.6s linear infinite;
}

@keyframes arcLoaderAnim {
  100% {
    transform: rotate(360deg);
  }
}
                          </style>
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<div class='arcLoader'>
  <div class='arcLoader__arc'></div>
</div>",
                              }
                            }
                          />
                        </div>
                      </div>
                      <div
                        className="grid_item_title"
                      >
                        <p
                          className="text bold"
                          style={
                            Object {
                              "margin": 0,
                            }
                          }
                        >
                          Arc
                        </p>
                      </div>
                    </a>
                  </div>
                  <div
                    className="grid_item "
                    onClick={[Function]}
                  >
                    <a
                      href="/arc_circle"
                      onClick={[Function]}
                      style={
                        Object {
                          "margin": 0,
                        }
                      }
                    >
                      <div
                        className="loader_container"
                        style={
                          Object {
                            "alignItems": "center",
                            "background": "#4ca98b",
                            "display": "flex",
                            "flex": "1",
                            "height": "10em",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <div
                          className="loader"
                        >
                          <style>
                            .arcCircleLoader {
  width: 60px;
  height: 60px;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}
.arcCircleLoader__arc {
  position: absolute;
  border: 6px solid white;
  border-bottom-color: transparent;
  border-left-color: transparent;
  display: inline-block;
  min-width: 15px;
  min-height: 15px;
  padding: 7.5px;
  border-radius: 100%;
  border-bottom-color: transparent;
  animation: arcCircleLoaderAnim 1.6s linear infinite;
}
.arcCircleLoader__circle {
  position: absolute;
  border-radius: 50%;
  background: white;
  width: 20px;
  height: 20px;
}

@keyframes arcCircleLoaderAnim {
  100% {
    transform: rotate(360deg);
  }
}
                          </style>
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<div class='arcCircleLoader'>
  <div class='arcCircleLoader__arc'></div>
  <div class='arcCircleLoader__circle'></div>
</div>",
                              }
                            }
                          />
                        </div>
                      </div>
                      <div
                        className="grid_item_title"
                      >
                        <p
                          className="text bold"
                          style={
                            Object {
                              "margin": 0,
                            }
                          }
                        >
                          Arc Circle
                        </p>
                      </div>
                    </a>
                  </div>
                  <div
                    className="grid_item "
                    onClick={[Function]}
                  >
                    <a
                      href="/double_arc"
                      onClick={[Function]}
                      style={
                        Object {
                          "margin": 0,
                        }
                      }
                    >
                      <div
                        className="loader_container"
                        style={
                          Object {
                            "alignItems": "center",
                            "background": "#4c4ea9",
                            "display": "flex",
                            "flex": "1",
                            "height": "10em",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <div
                          className="loader"
                        >
                          <style>
                            .doubleArcLoader {
  width: 60px;
  height: 60px;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}
.doubleArcLoader__arc {
  position: absolute;
  border: 6px solid white;
  border-bottom-color: transparent;
  border-left-color: transparent;
  display: inline-block;
  min-width: 15px;
  min-height: 15px;
  padding: 7.5px;
  border-radius: 100%;
  border-bottom-color: transparent;
  animation: arcLoaderAnim 1.6s linear infinite;
}
.doubleArcLoader__arc--large {
  min-width: 34.2857142857px;
  min-height: 34.2857142857px;
  padding: 10px;
  animation: doubleArcLoaderLargeAnim 2.1s linear infinite;
}

@keyframes doubleArcLoaderAnim {
  100% {
    transform: rotate(360deg);
  }
}
@keyframes doubleArcLoaderLargeAnim {
  0% {
    transform: rotate(-180deg);
  }
  100% {
    transform: rotate(180deg);
  }
}
                          </style>
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<div class='doubleArcLoader'>
  <div class='doubleArcLoader__arc'></div>
  <div class='doubleArcLoader__arc doubleArcLoader__arc--large'></div>
</div>",
                              }
                            }
                          />
                        </div>
                      </div>
                      <div
                        className="grid_item_title"
                      >
                        <p
                          className="text bold"
                          style={
                            Object {
                              "margin": 0,
                            }
                          }
                        >
                          Double Arc
                        </p>
                      </div>
                    </a>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="column"
    style={
      Object {
        "width": "50%",
      }
    }
  >
    <div
      className="tabs_container"
    >
      <div
        className="tabs"
      >
        <button
          className="tab active"
          onClick={[Function]}
        >
          HTML
        </button>
        <button
          className="tab "
          onClick={[Function]}
        >
          CSS
        </button>
        <button
          className="tab "
          onClick={[Function]}
        >
          SCSS
        </button>
      </div>
      <div
        className="tabs_content"
      >
        <div
          className="code_container"
        >
          <div
            className="code_actions"
          >
            <button
              className="button primary"
              onClick={[Function]}
              title="Copy HTML"
            >
              <svg
                fill="currentColor"
                height="1em"
                stroke="currentColor"
                strokeWidth="0"
                style={
                  Object {
                    "color": undefined,
                  }
                }
                viewBox="0 0 384 512"
                width="1em"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z"
                />
              </svg>
            </button>
            <a
              className="code_codepen"
              href="https://codepen.io/danhearn/pen/YWNGYR"
              rel="noopener noreferrer"
              target="_blank"
            >
              <button
                className="button primary"
                on={true}
                title="Open CodePen Editor"
              >
                CodePen 
                <svg
                  fill="currentColor"
                  height="1em"
                  stroke="currentColor"
                  strokeWidth="0"
                  style={
                    Object {
                      "color": undefined,
                    }
                  }
                  viewBox="0 0 512 512"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                  />
                </svg>
              </button>
            </a>
          </div>
          <div
            className="content_container"
          >
            <pre
              className="code_block"
              style={
                Object {
                  "MozHyphens": "none",
                  "MozTabSize": "4",
                  "OTabSize": "4",
                  "WebkitHyphens": "none",
                  "background": "#f5f2f0",
                  "color": "black",
                  "fontFamily": "Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",
                  "hyphens": "none",
                  "lineHeight": "1.5",
                  "margin": ".5em 0",
                  "msHyphens": "none",
                  "overflow": "auto",
                  "padding": "1em",
                  "tabSize": "4",
                  "textAlign": "left",
                  "textShadow": "0 1px white",
                  "whiteSpace": "pre",
                  "wordBreak": "normal",
                  "wordSpacing": "normal",
                  "wordWrap": "normal",
                }
              }
            >
              <code
                style={
                  Object {
                    "MozHyphens": "none",
                    "MozTabSize": "4",
                    "OTabSize": "4",
                    "WebkitHyphens": "none",
                    "background": "none",
                    "color": "black",
                    "fontFamily": "Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",
                    "hyphens": "none",
                    "lineHeight": "1.5",
                    "msHyphens": "none",
                    "tabSize": "4",
                    "textAlign": "left",
                    "textShadow": "0 1px white",
                    "whiteSpace": "pre",
                    "wordBreak": "normal",
                    "wordSpacing": "normal",
                    "wordWrap": "normal",
                  }
                }
              >
                <span
                  className="token"
                  style={
                    Object {
                      "color": "#905",
                    }
                  }
                >
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#905",
                      }
                    }
                  >
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      &lt;
                    </span>
                    div
                  </span>
                   
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#690",
                      }
                    }
                  >
                    class
                  </span>
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#07a",
                      }
                    }
                  >
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      =
                    </span>
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      '
                    </span>
                    squareLoader
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      '
                    </span>
                  </span>
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#999",
                      }
                    }
                  >
                    &gt;
                  </span>
                </span>
                
  
                <span
                  className="token"
                  style={
                    Object {
                      "color": "#905",
                    }
                  }
                >
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#905",
                      }
                    }
                  >
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      &lt;
                    </span>
                    div
                  </span>
                   
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#690",
                      }
                    }
                  >
                    class
                  </span>
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#07a",
                      }
                    }
                  >
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      =
                    </span>
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      '
                    </span>
                    squareLoader__square
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      '
                    </span>
                  </span>
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#999",
                      }
                    }
                  >
                    &gt;
                  </span>
                </span>
                <span
                  className="token"
                  style={
                    Object {
                      "color": "#905",
                    }
                  }
                >
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#905",
                      }
                    }
                  >
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      &lt;/
                    </span>
                    div
                  </span>
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#999",
                      }
                    }
                  >
                    &gt;
                  </span>
                </span>
                
  
                <span
                  className="token"
                  style={
                    Object {
                      "color": "#905",
                    }
                  }
                >
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#905",
                      }
                    }
                  >
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      &lt;
                    </span>
                    div
                  </span>
                   
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#690",
                      }
                    }
                  >
                    class
                  </span>
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#07a",
                      }
                    }
                  >
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      =
                    </span>
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      '
                    </span>
                    squareLoader__square
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      '
                    </span>
                  </span>
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#999",
                      }
                    }
                  >
                    &gt;
                  </span>
                </span>
                <span
                  className="token"
                  style={
                    Object {
                      "color": "#905",
                    }
                  }
                >
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#905",
                      }
                    }
                  >
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      &lt;/
                    </span>
                    div
                  </span>
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#999",
                      }
                    }
                  >
                    &gt;
                  </span>
                </span>
                
  
                <span
                  className="token"
                  style={
                    Object {
                      "color": "#905",
                    }
                  }
                >
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#905",
                      }
                    }
                  >
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      &lt;
                    </span>
                    div
                  </span>
                   
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#690",
                      }
                    }
                  >
                    class
                  </span>
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#07a",
                      }
                    }
                  >
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      =
                    </span>
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      '
                    </span>
                    squareLoader__square
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      '
                    </span>
                  </span>
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#999",
                      }
                    }
                  >
                    &gt;
                  </span>
                </span>
                <span
                  className="token"
                  style={
                    Object {
                      "color": "#905",
                    }
                  }
                >
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#905",
                      }
                    }
                  >
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      &lt;/
                    </span>
                    div
                  </span>
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#999",
                      }
                    }
                  >
                    &gt;
                  </span>
                </span>
                
  
                <span
                  className="token"
                  style={
                    Object {
                      "color": "#905",
                    }
                  }
                >
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#905",
                      }
                    }
                  >
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      &lt;
                    </span>
                    div
                  </span>
                   
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#690",
                      }
                    }
                  >
                    class
                  </span>
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#07a",
                      }
                    }
                  >
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      =
                    </span>
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      '
                    </span>
                    squareLoader__square
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      '
                    </span>
                  </span>
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#999",
                      }
                    }
                  >
                    &gt;
                  </span>
                </span>
                <span
                  className="token"
                  style={
                    Object {
                      "color": "#905",
                    }
                  }
                >
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#905",
                      }
                    }
                  >
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      &lt;/
                    </span>
                    div
                  </span>
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#999",
                      }
                    }
                  >
                    &gt;
                  </span>
                </span>
                

                <span
                  className="token"
                  style={
                    Object {
                      "color": "#905",
                    }
                  }
                >
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#905",
                      }
                    }
                  >
                    <span
                      className="token"
                      style={
                        Object {
                          "color": "#999",
                        }
                      }
                    >
                      &lt;/
                    </span>
                    div
                  </span>
                  <span
                    className="token"
                    style={
                      Object {
                        "color": "#999",
                      }
                    }
                  >
                    &gt;
                  </span>
                </span>
              </code>
            </pre>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots MobileNav With Content 1`] = `
<div
  className="mobile_nav_container"
>
  <div
    className="mobile_nav_content"
  >
    <p>
      Animation Content
    </p>
  </div>
  <div
    className="mobile_nav_tabs"
  >
    <button
      className="mobile_nav_tab active"
      onClick={[Function]}
    >
      <div
        className="mobile_nav_tab_icon"
      >
        <svg
          baseProfile="tiny"
          fill="currentColor"
          height="1em"
          stroke="currentColor"
          strokeWidth="0"
          style={
            Object {
              "color": undefined,
            }
          }
          version="1.2"
          viewBox="0 0 24 24"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M10.396 18.433c2.641-2.574 6.604-6.433 6.604-6.433s-3.963-3.859-6.604-6.433c-.363-.349-.853-.567-1.396-.567-1.104 0-2 .896-2 2v10c0 1.104.896 2 2 2 .543 0 1.033-.218 1.396-.567z"
          />
        </svg>
      </div>
      <p
        className="mobile_nav_tab_name"
      >
        Animation
      </p>
    </button>
    <button
      className="mobile_nav_tab "
      onClick={[Function]}
    >
      <div
        className="mobile_nav_tab_icon"
      >
        <svg
          baseProfile="tiny"
          fill="currentColor"
          height="1em"
          stroke="currentColor"
          strokeWidth="0"
          style={
            Object {
              "color": undefined,
            }
          }
          version="1.2"
          viewBox="0 0 24 24"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M8.171 18c-.512 0-1.023-.195-1.414-.586l-4.414-4.414 4.414-4.414c.781-.781 2.049-.781 2.828 0 .781.781.781 2.047 0 2.828l-1.585 1.586 1.585 1.586c.781.781.781 2.047 0 2.828-.39.391-.902.586-1.414.586zM15.829 18c-.512 0-1.024-.195-1.414-.586-.781-.781-.781-2.047 0-2.828l1.585-1.586-1.585-1.586c-.781-.781-.781-2.047 0-2.828.779-.781 2.047-.781 2.828 0l4.414 4.414-4.414 4.414c-.39.391-.902.586-1.414.586z"
          />
        </svg>
      </div>
      <p
        className="mobile_nav_tab_name"
      >
        Code
      </p>
    </button>
    <button
      className="mobile_nav_tab "
      onClick={[Function]}
    >
      <div
        className="mobile_nav_tab_icon"
      >
        <svg
          baseProfile="tiny"
          fill="currentColor"
          height="1em"
          stroke="currentColor"
          strokeWidth="0"
          style={
            Object {
              "color": undefined,
            }
          }
          version="1.2"
          viewBox="0 0 24 24"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <circle
            cx="5"
            cy="19"
            r="2.5"
          />
          <circle
            cx="5"
            cy="12"
            r="2.5"
          />
          <circle
            cx="5"
            cy="5"
            r="2.5"
          />
          <circle
            cx="12"
            cy="19"
            r="2.5"
          />
          <circle
            cx="12"
            cy="12"
            r="2.5"
          />
          <circle
            cx="12"
            cy="5"
            r="2.5"
          />
          <circle
            cx="19"
            cy="19"
            r="2.5"
          />
          <circle
            cx="19"
            cy="12"
            r="2.5"
          />
          <circle
            cx="19"
            cy="5"
            r="2.5"
          />
        </svg>
      </div>
      <p
        className="mobile_nav_tab_name"
      >
        Library
      </p>
    </button>
  </div>
</div>
`;

exports[`Storyshots Nav With Content 1`] = `
<nav
  className="nav"
>
  <span
    className="nav_title"
  >
    CSS Loaders
  </span>
  <div
    className="nav_subtitle"
  >
    By 
    <a
      className="link"
      href="https://danielhearn.co.uk"
    >
      Daniel Hearn
    </a>
  </div>
</nav>
`;

exports[`Storyshots ScrollBox Default 1`] = `
<div
  className="scroll_box  "
>
  <div
    className="scroll_box_content"
  >
    <div
      style={
        Object {
          "height": "200%",
          "width": "200vw",
        }
      }
    >
      <p>
        TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots ScrollBox With X 1`] = `
<div
  className="scroll_box scroll-x "
>
  <div
    className="scroll_box_content"
  >
    <div
      style={
        Object {
          "height": "200%",
          "width": "200vw",
        }
      }
    >
      <p>
        TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots ScrollBox With Xand Y 1`] = `
<div
  className="scroll_box scroll-x scroll-y"
>
  <div
    className="scroll_box_content"
  >
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
    <p>
      TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
    </p>
  </div>
</div>
`;

exports[`Storyshots ScrollBox With Y 1`] = `
<div
  className="scroll_box  scroll-y"
>
  <div
    className="scroll_box_content"
  >
    <div
      style={
        Object {
          "height": "200%",
          "width": "200vw",
        }
      }
    >
      <p>
        TextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontentTextcontent
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots SearchForm Element 1`] = `
<form
  className="search_form"
  onSubmit={[Function]}
>
  <div
    className="input_box"
  >
    <div
      className="input_icon"
    >
      <svg
        fill="currentColor"
        height="1em"
        stroke="currentColor"
        strokeWidth="0"
        style={
          Object {
            "color": undefined,
          }
        }
        viewBox="0 0 512 512"
        width="1em"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
        />
      </svg>
    </div>
    <input
      className="text_input with-icon"
      name="text"
      onChange={[Function]}
      placeholder="Search"
      value=""
    />
  </div>
</form>
`;

exports[`Storyshots Tabs With Content 1`] = `
<div
  className="tabs_container"
>
  <div
    className="tabs"
  >
    <button
      className="tab active"
      onClick={[Function]}
    >
      HTML
    </button>
    <button
      className="tab "
      onClick={[Function]}
    >
      CSS
    </button>
    <button
      className="tab "
      onClick={[Function]}
    >
      SCSS
    </button>
  </div>
  <div
    className="tabs_content"
  >
    &lt;div class="hollowLoader"&gt;
  &lt;div class="hollowLoader__largeBox"&gt;&lt;/div&gt;
  &lt;div class="hollowLoader__smallBox"&gt;&lt;/div&gt;
&lt;/div&gt;
  </div>
</div>
`;
